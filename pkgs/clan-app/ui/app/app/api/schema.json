{
  "$exportedModuleInfo": {
    "path": []
  },
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "properties": {
    "machines": {
      "$exportedModuleInfo": {
        "path": ["machines"]
      },
      "additionalProperties": {
        "$exportedModuleInfo": {
          "path": ["machines"]
        },
        "additionalProperties": false,
        "properties": {
          "deploy": {
            "$exportedModuleInfo": {
              "path": ["machines", "deploy"]
            },
            "additionalProperties": false,
            "properties": {
              "targetHost": {
                "$exportedModuleInfo": {
                  "path": ["machines", "deploy", "targetHost"]
                },
                "default": null,
                "description": "Configuration for the deployment of the machine",
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "$exportedModuleInfo": {
                      "path": ["machines", "deploy", "targetHost"]
                    },
                    "type": "string"
                  }
                ]
              }
            },
            "type": "object"
          },
          "description": {
            "$exportedModuleInfo": {
              "path": ["machines", "description"]
            },
            "default": null,
            "description": "Optional freeform description\n",
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$exportedModuleInfo": {
                  "path": ["machines", "description"]
                },
                "type": "string"
              }
            ]
          },
          "icon": {
            "$exportedModuleInfo": {
              "path": ["machines", "icon"]
            },
            "default": null,
            "description": "Under construction, will be used for the UI\n",
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$exportedModuleInfo": {
                  "path": ["machines", "icon"]
                },
                "type": "string"
              }
            ]
          },
          "machineClass": {
            "$exportedModuleInfo": {
              "path": ["machines", "machineClass"]
            },
            "default": "nixos",
            "description": "The module system that should be used to construct the machine\n\nSet this to `darwin` for macOS machines\n",
            "enum": ["nixos", "darwin"]
          },
          "name": {
            "$exportedModuleInfo": {
              "path": ["machines", "name"]
            },
            "default": "\u2039name\u203a",
            "description": "Name of the machine or service\n",
            "type": "string"
          },
          "tags": {
            "$exportedModuleInfo": {
              "path": ["machines", "tags"]
            },
            "default": [],
            "description": "List of tags for the machine.\n\nThe machine can be referenced by its tags in `inventory.services`\n\n???+ Example\n    ```nix\n    inventory.machines.machineA.tags = [ \"tag1\" \"tag2\" ];\n    ```\n\n    ```nix\n    services.borgbackup.\"instance_1\".roles.client.tags = [ \"tag1\" ];\n    ```\n\n!!! Note\n    Tags can be used to determine the membership of the machine in the services.\n    Without changing the service configuration, the machine can be added to a service by adding the correct tags to the machine.\n\n",
            "items": {
              "$exportedModuleInfo": {
                "path": ["machines", "tags"]
              },
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": ["deploy"],
        "type": "object"
      },
      "default": {},
      "description": "Machines in the inventory.\n\nEach machine declared here can be referencd via its `attributeName` by the `inventory.service`s `roles`.\n",
      "type": "object"
    },
    "meta": {
      "$exportedModuleInfo": {
        "path": ["meta"]
      },
      "additionalProperties": false,
      "properties": {
        "description": {
          "$exportedModuleInfo": {
            "path": ["meta", "description"]
          },
          "default": null,
          "description": "Optional freeform description\n",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$exportedModuleInfo": {
                "path": ["meta", "description"]
              },
              "type": "string"
            }
          ]
        },
        "icon": {
          "$exportedModuleInfo": {
            "path": ["meta", "icon"]
          },
          "default": null,
          "description": "Under construction, will be used for the UI\n",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$exportedModuleInfo": {
                "path": ["meta", "icon"]
              },
              "type": "string"
            }
          ]
        },
        "name": {
          "$exportedModuleInfo": {
            "path": ["meta", "name"]
          },
          "description": "Name of the clan.\n\nNeeds to be (globally) unique, as this determines the folder name where the flake gets downloaded to.\n\nShould only contain alphanumeric characters, `_` and `-`.\n",
          "examples": ["my_clan"],
          "type": "string"
        }
      },
      "required": ["name"],
      "type": "object"
    },
    "modules": {
      "$exportedModuleInfo": {
        "defaultText": "clanModules of clan-core",
        "path": ["modules"]
      },
      "additionalProperties": {
        "$exportedModuleInfo": {
          "path": ["modules"]
        },
        "type": [
          "boolean",
          "integer",
          "number",
          "string",
          "array",
          "object",
          "null"
        ]
      },
      "description": "A mapping of module names to their path.\n\nEach module can be referenced by its `attributeName` in the `inventory.services` attribute set.\n\n!!! Important\n    Each module MUST fulfill the following requirements to be usable with the inventory:\n\n    - The module MUST have a `README.md` file with a `description`.\n    - The module MUST have at least `features = [ \"inventory\" ]` in the frontmatter section.\n    - The module MUST have a subfolder `roles` with at least one `{roleName}.nix` file.\n\n    For further information see: [Module Authoring Guide](../../authoring/clanServices/index.md).\n\n???+ example\n    ```nix\n    buildClan {\n        # 1. Add the module to the available inventory modules\n        inventory.modules = {\n          custom-module = ./modules/my_module;\n        };\n        # 2. Use the module in the inventory\n        inventory.services = {\n          custom-module.instance_1 = {\n              roles.default.machines = [ \"machineA\" ];\n          };\n        };\n    };\n    ```\n",
      "type": "object"
    },
    "services": {
      "type": "object",
      "properties": {
        "admin": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "config": {
                "title": "admin-config",
                "oneOf": [
                  {
                    "$exportedModuleInfo": {
                      "path": []
                    },
                    "additionalProperties": false,
                    "properties": {
                      "allowedKeys": {
                        "$exportedModuleInfo": {
                          "path": ["clan", "admin", "allowedKeys"]
                        },
                        "additionalProperties": {
                          "$exportedModuleInfo": {
                            "path": ["clan", "admin", "allowedKeys"]
                          },
                          "type": "string"
                        },
                        "default": {},
                        "description": "The allowed public keys for ssh access to the admin user",
                        "examples": [
                          {
                            "key_1": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD..."
                          }
                        ],
                        "type": "object"
                      }
                    },
                    "type": "object",
                    "title": "admin-config-role-default"
                  }
                ],
                "type": "object",
                "default": {},
                "additionalProperties": false
              },
              "enabled": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "enabled"]
                },
                "default": true,
                "description": "Enable or disable the complete service.\n\nIf the service is disabled, it will not be added to any machine.\n\n!!! Note\n    This flag is primarily used to temporarily disable a service.\n    I.e. A 'backup service' without any 'server' might be incomplete and would cause failure if enabled.\n",
                "type": "boolean"
              },
              "extraModules": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "extraModules"]
                },
                "default": [],
                "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                "items": {
                  "$exportedModuleInfo": {
                    "path": ["services", "<name>", "extraModules"]
                  },
                  "oneOf": [
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": "string"
                    },
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": [
                        "boolean",
                        "integer",
                        "number",
                        "string",
                        "array",
                        "object",
                        "null"
                      ]
                    }
                  ]
                },
                "type": "array"
              },
              "machines": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "config": {
                      "title": "admin-config",
                      "oneOf": [
                        {
                          "$exportedModuleInfo": {
                            "path": []
                          },
                          "additionalProperties": false,
                          "properties": {
                            "allowedKeys": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "admin", "allowedKeys"]
                              },
                              "additionalProperties": {
                                "$exportedModuleInfo": {
                                  "path": ["clan", "admin", "allowedKeys"]
                                },
                                "type": "string"
                              },
                              "default": {},
                              "description": "The allowed public keys for ssh access to the admin user",
                              "examples": [
                                {
                                  "key_1": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD..."
                                }
                              ],
                              "type": "object"
                            }
                          },
                          "type": "object",
                          "title": "admin-config-role-default"
                        }
                      ],
                      "type": "object",
                      "default": {},
                      "additionalProperties": false
                    },
                    "extraModules": {
                      "$exportedModuleInfo": {
                        "path": [
                          "services",
                          "<name>",
                          "machines",
                          "<name>",
                          "extraModules"
                        ]
                      },
                      "default": [],
                      "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                      "items": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "machines",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "oneOf": [
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": "string"
                          },
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": [
                              "boolean",
                              "integer",
                              "number",
                              "string",
                              "array",
                              "object",
                              "null"
                            ]
                          }
                        ]
                      },
                      "type": "array"
                    }
                  }
                }
              },
              "meta": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "meta"]
                },
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "description"]
                    },
                    "default": null,
                    "description": "Optional freeform description\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "description"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "icon": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "icon"]
                    },
                    "default": null,
                    "description": "Under construction, will be used for the UI\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "icon"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "name": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "name"]
                    },
                    "default": "\u2039name\u203a",
                    "description": "Name of the machine or service\n",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "roles": {
                "title": "admin-roles",
                "type": "object",
                "properties": {
                  "default": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "config": {
                        "$exportedModuleInfo": {
                          "path": []
                        },
                        "additionalProperties": false,
                        "properties": {
                          "allowedKeys": {
                            "$exportedModuleInfo": {
                              "path": ["clan", "admin", "allowedKeys"]
                            },
                            "additionalProperties": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "admin", "allowedKeys"]
                              },
                              "type": "string"
                            },
                            "default": {},
                            "description": "The allowed public keys for ssh access to the admin user",
                            "examples": [
                              {
                                "key_1": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD..."
                              }
                            ],
                            "type": "object"
                          }
                        },
                        "type": "object",
                        "title": "admin-config-role-default",
                        "default": {}
                      },
                      "extraModules": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "default": [],
                        "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "extraModules"
                            ]
                          },
                          "oneOf": [
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": "string"
                            },
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": [
                                "boolean",
                                "integer",
                                "number",
                                "string",
                                "array",
                                "object",
                                "null"
                              ]
                            }
                          ]
                        },
                        "type": "array"
                      },
                      "machines": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "machines"
                          ]
                        },
                        "default": [],
                        "description": "List of machines which are part of the role.\n\nThe machines are referenced by their `attributeName` in the `inventory.machines` attribute set.\n\nMemberships are declared here to determine which machines are part of the service.\n\nAlternatively, `tags` can be used to determine the membership, more dynamically.\n",
                        "examples": ["machineA"],
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "machines"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "tags": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "tags"
                          ]
                        },
                        "default": [],
                        "description": "List of tags which are used to determine the membership of the role.\n\nThe tags are matched against the `inventory.machines.<machineName>.tags` attribute set.\nIf a machine has at least one tag of the role, it is part of the role.\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "tags"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "auto-upgrade": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "config": {
                "title": "auto-upgrade-config",
                "oneOf": [
                  {
                    "$exportedModuleInfo": {
                      "path": []
                    },
                    "additionalProperties": false,
                    "properties": {
                      "flake": {
                        "$exportedModuleInfo": {
                          "path": ["clan", "auto-upgrade", "flake"]
                        },
                        "description": "Flake reference",
                        "type": "string"
                      }
                    },
                    "required": ["flake"],
                    "type": "object",
                    "title": "auto-upgrade-config-role-default"
                  }
                ],
                "type": "object",
                "default": {},
                "additionalProperties": false
              },
              "enabled": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "enabled"]
                },
                "default": true,
                "description": "Enable or disable the complete service.\n\nIf the service is disabled, it will not be added to any machine.\n\n!!! Note\n    This flag is primarily used to temporarily disable a service.\n    I.e. A 'backup service' without any 'server' might be incomplete and would cause failure if enabled.\n",
                "type": "boolean"
              },
              "extraModules": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "extraModules"]
                },
                "default": [],
                "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                "items": {
                  "$exportedModuleInfo": {
                    "path": ["services", "<name>", "extraModules"]
                  },
                  "oneOf": [
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": "string"
                    },
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": [
                        "boolean",
                        "integer",
                        "number",
                        "string",
                        "array",
                        "object",
                        "null"
                      ]
                    }
                  ]
                },
                "type": "array"
              },
              "machines": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "config": {
                      "title": "auto-upgrade-config",
                      "oneOf": [
                        {
                          "$exportedModuleInfo": {
                            "path": []
                          },
                          "additionalProperties": false,
                          "properties": {
                            "flake": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "auto-upgrade", "flake"]
                              },
                              "description": "Flake reference",
                              "type": "string"
                            }
                          },
                          "required": ["flake"],
                          "type": "object",
                          "title": "auto-upgrade-config-role-default"
                        }
                      ],
                      "type": "object",
                      "default": {},
                      "additionalProperties": false
                    },
                    "extraModules": {
                      "$exportedModuleInfo": {
                        "path": [
                          "services",
                          "<name>",
                          "machines",
                          "<name>",
                          "extraModules"
                        ]
                      },
                      "default": [],
                      "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                      "items": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "machines",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "oneOf": [
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": "string"
                          },
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": [
                              "boolean",
                              "integer",
                              "number",
                              "string",
                              "array",
                              "object",
                              "null"
                            ]
                          }
                        ]
                      },
                      "type": "array"
                    }
                  }
                }
              },
              "meta": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "meta"]
                },
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "description"]
                    },
                    "default": null,
                    "description": "Optional freeform description\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "description"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "icon": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "icon"]
                    },
                    "default": null,
                    "description": "Under construction, will be used for the UI\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "icon"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "name": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "name"]
                    },
                    "default": "\u2039name\u203a",
                    "description": "Name of the machine or service\n",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "roles": {
                "title": "auto-upgrade-roles",
                "type": "object",
                "properties": {
                  "default": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "config": {
                        "$exportedModuleInfo": {
                          "path": []
                        },
                        "additionalProperties": false,
                        "properties": {
                          "flake": {
                            "$exportedModuleInfo": {
                              "path": ["clan", "auto-upgrade", "flake"]
                            },
                            "description": "Flake reference",
                            "type": "string"
                          }
                        },
                        "required": ["flake"],
                        "type": "object",
                        "title": "auto-upgrade-config-role-default",
                        "default": {}
                      },
                      "extraModules": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "default": [],
                        "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "extraModules"
                            ]
                          },
                          "oneOf": [
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": "string"
                            },
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": [
                                "boolean",
                                "integer",
                                "number",
                                "string",
                                "array",
                                "object",
                                "null"
                              ]
                            }
                          ]
                        },
                        "type": "array"
                      },
                      "machines": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "machines"
                          ]
                        },
                        "default": [],
                        "description": "List of machines which are part of the role.\n\nThe machines are referenced by their `attributeName` in the `inventory.machines` attribute set.\n\nMemberships are declared here to determine which machines are part of the service.\n\nAlternatively, `tags` can be used to determine the membership, more dynamically.\n",
                        "examples": ["machineA"],
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "machines"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "tags": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "tags"
                          ]
                        },
                        "default": [],
                        "description": "List of tags which are used to determine the membership of the role.\n\nThe tags are matched against the `inventory.machines.<machineName>.tags` attribute set.\nIf a machine has at least one tag of the role, it is part of the role.\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "tags"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "borgbackup": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "config": {
                "title": "borgbackup-config",
                "oneOf": [
                  {
                    "$exportedModuleInfo": {
                      "path": []
                    },
                    "additionalProperties": false,
                    "properties": {
                      "destinations": {
                        "$exportedModuleInfo": {
                          "path": ["clan", "borgbackup", "destinations"]
                        },
                        "additionalProperties": {
                          "$exportedModuleInfo": {
                            "path": [
                              "clan",
                              "borgbackup",
                              "destinations",
                              "<name>"
                            ]
                          },
                          "additionalProperties": false,
                          "properties": {
                            "name": {
                              "$exportedModuleInfo": {
                                "path": [
                                  "clan",
                                  "borgbackup",
                                  "destinations",
                                  "<name>",
                                  "name"
                                ]
                              },
                              "default": "\u2039name\u203a",
                              "description": "the name of the backup job",
                              "type": "string"
                            },
                            "repo": {
                              "$exportedModuleInfo": {
                                "path": [
                                  "clan",
                                  "borgbackup",
                                  "destinations",
                                  "<name>",
                                  "repo"
                                ]
                              },
                              "description": "the borgbackup repository to backup to",
                              "type": "string"
                            },
                            "rsh": {
                              "$exportedModuleInfo": {
                                "defaultText": "ssh -i ${config.clan.core.vars.generators.borgbackup.files.\"borgbackup.ssh\".path} -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null",
                                "path": [
                                  "clan",
                                  "borgbackup",
                                  "destinations",
                                  "<name>",
                                  "rsh"
                                ]
                              },
                              "description": "the rsh to use for the backup",
                              "type": "string"
                            }
                          },
                          "required": ["repo", "rsh"],
                          "type": "object"
                        },
                        "default": {},
                        "description": "destinations where the machine should be backuped to\n",
                        "type": "object"
                      },
                      "exclude": {
                        "$exportedModuleInfo": {
                          "path": ["clan", "borgbackup", "exclude"]
                        },
                        "default": [],
                        "description": "Directories/Files to exclude from the backup.\nUse * as a wildcard.\n",
                        "examples": ["*.pyc"],
                        "items": {
                          "$exportedModuleInfo": {
                            "path": ["clan", "borgbackup", "exclude"]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object",
                    "title": "borgbackup-config-role-client"
                  },
                  {
                    "$exportedModuleInfo": {
                      "path": []
                    },
                    "additionalProperties": false,
                    "properties": {
                      "directory": {
                        "$exportedModuleInfo": {
                          "path": ["clan", "borgbackup", "directory"]
                        },
                        "default": "/var/lib/borgbackup",
                        "description": "The directory where the borgbackup repositories are stored.\n",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "title": "borgbackup-config-role-server"
                  }
                ],
                "type": "object",
                "default": {},
                "additionalProperties": false
              },
              "enabled": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "enabled"]
                },
                "default": true,
                "description": "Enable or disable the complete service.\n\nIf the service is disabled, it will not be added to any machine.\n\n!!! Note\n    This flag is primarily used to temporarily disable a service.\n    I.e. A 'backup service' without any 'server' might be incomplete and would cause failure if enabled.\n",
                "type": "boolean"
              },
              "extraModules": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "extraModules"]
                },
                "default": [],
                "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                "items": {
                  "$exportedModuleInfo": {
                    "path": ["services", "<name>", "extraModules"]
                  },
                  "oneOf": [
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": "string"
                    },
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": [
                        "boolean",
                        "integer",
                        "number",
                        "string",
                        "array",
                        "object",
                        "null"
                      ]
                    }
                  ]
                },
                "type": "array"
              },
              "machines": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "config": {
                      "title": "borgbackup-config",
                      "oneOf": [
                        {
                          "$exportedModuleInfo": {
                            "path": []
                          },
                          "additionalProperties": false,
                          "properties": {
                            "destinations": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "borgbackup", "destinations"]
                              },
                              "additionalProperties": {
                                "$exportedModuleInfo": {
                                  "path": [
                                    "clan",
                                    "borgbackup",
                                    "destinations",
                                    "<name>"
                                  ]
                                },
                                "additionalProperties": false,
                                "properties": {
                                  "name": {
                                    "$exportedModuleInfo": {
                                      "path": [
                                        "clan",
                                        "borgbackup",
                                        "destinations",
                                        "<name>",
                                        "name"
                                      ]
                                    },
                                    "default": "\u2039name\u203a",
                                    "description": "the name of the backup job",
                                    "type": "string"
                                  },
                                  "repo": {
                                    "$exportedModuleInfo": {
                                      "path": [
                                        "clan",
                                        "borgbackup",
                                        "destinations",
                                        "<name>",
                                        "repo"
                                      ]
                                    },
                                    "description": "the borgbackup repository to backup to",
                                    "type": "string"
                                  },
                                  "rsh": {
                                    "$exportedModuleInfo": {
                                      "defaultText": "ssh -i ${config.clan.core.vars.generators.borgbackup.files.\"borgbackup.ssh\".path} -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null",
                                      "path": [
                                        "clan",
                                        "borgbackup",
                                        "destinations",
                                        "<name>",
                                        "rsh"
                                      ]
                                    },
                                    "description": "the rsh to use for the backup",
                                    "type": "string"
                                  }
                                },
                                "required": ["repo", "rsh"],
                                "type": "object"
                              },
                              "default": {},
                              "description": "destinations where the machine should be backuped to\n",
                              "type": "object"
                            },
                            "exclude": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "borgbackup", "exclude"]
                              },
                              "default": [],
                              "description": "Directories/Files to exclude from the backup.\nUse * as a wildcard.\n",
                              "examples": ["*.pyc"],
                              "items": {
                                "$exportedModuleInfo": {
                                  "path": ["clan", "borgbackup", "exclude"]
                                },
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object",
                          "title": "borgbackup-config-role-client"
                        },
                        {
                          "$exportedModuleInfo": {
                            "path": []
                          },
                          "additionalProperties": false,
                          "properties": {
                            "directory": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "borgbackup", "directory"]
                              },
                              "default": "/var/lib/borgbackup",
                              "description": "The directory where the borgbackup repositories are stored.\n",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "title": "borgbackup-config-role-server"
                        }
                      ],
                      "type": "object",
                      "default": {},
                      "additionalProperties": false
                    },
                    "extraModules": {
                      "$exportedModuleInfo": {
                        "path": [
                          "services",
                          "<name>",
                          "machines",
                          "<name>",
                          "extraModules"
                        ]
                      },
                      "default": [],
                      "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                      "items": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "machines",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "oneOf": [
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": "string"
                          },
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": [
                              "boolean",
                              "integer",
                              "number",
                              "string",
                              "array",
                              "object",
                              "null"
                            ]
                          }
                        ]
                      },
                      "type": "array"
                    }
                  }
                }
              },
              "meta": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "meta"]
                },
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "description"]
                    },
                    "default": null,
                    "description": "Optional freeform description\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "description"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "icon": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "icon"]
                    },
                    "default": null,
                    "description": "Under construction, will be used for the UI\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "icon"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "name": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "name"]
                    },
                    "default": "\u2039name\u203a",
                    "description": "Name of the machine or service\n",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "roles": {
                "title": "borgbackup-roles",
                "type": "object",
                "properties": {
                  "client": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "config": {
                        "$exportedModuleInfo": {
                          "path": []
                        },
                        "additionalProperties": false,
                        "properties": {
                          "destinations": {
                            "$exportedModuleInfo": {
                              "path": ["clan", "borgbackup", "destinations"]
                            },
                            "additionalProperties": {
                              "$exportedModuleInfo": {
                                "path": [
                                  "clan",
                                  "borgbackup",
                                  "destinations",
                                  "<name>"
                                ]
                              },
                              "additionalProperties": false,
                              "properties": {
                                "name": {
                                  "$exportedModuleInfo": {
                                    "path": [
                                      "clan",
                                      "borgbackup",
                                      "destinations",
                                      "<name>",
                                      "name"
                                    ]
                                  },
                                  "default": "\u2039name\u203a",
                                  "description": "the name of the backup job",
                                  "type": "string"
                                },
                                "repo": {
                                  "$exportedModuleInfo": {
                                    "path": [
                                      "clan",
                                      "borgbackup",
                                      "destinations",
                                      "<name>",
                                      "repo"
                                    ]
                                  },
                                  "description": "the borgbackup repository to backup to",
                                  "type": "string"
                                },
                                "rsh": {
                                  "$exportedModuleInfo": {
                                    "defaultText": "ssh -i ${config.clan.core.vars.generators.borgbackup.files.\"borgbackup.ssh\".path} -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null",
                                    "path": [
                                      "clan",
                                      "borgbackup",
                                      "destinations",
                                      "<name>",
                                      "rsh"
                                    ]
                                  },
                                  "description": "the rsh to use for the backup",
                                  "type": "string"
                                }
                              },
                              "required": ["repo", "rsh"],
                              "type": "object"
                            },
                            "default": {},
                            "description": "destinations where the machine should be backuped to\n",
                            "type": "object"
                          },
                          "exclude": {
                            "$exportedModuleInfo": {
                              "path": ["clan", "borgbackup", "exclude"]
                            },
                            "default": [],
                            "description": "Directories/Files to exclude from the backup.\nUse * as a wildcard.\n",
                            "examples": ["*.pyc"],
                            "items": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "borgbackup", "exclude"]
                              },
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object",
                        "title": "borgbackup-config-role-client",
                        "default": {}
                      },
                      "extraModules": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "default": [],
                        "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "extraModules"
                            ]
                          },
                          "oneOf": [
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": "string"
                            },
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": [
                                "boolean",
                                "integer",
                                "number",
                                "string",
                                "array",
                                "object",
                                "null"
                              ]
                            }
                          ]
                        },
                        "type": "array"
                      },
                      "machines": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "machines"
                          ]
                        },
                        "default": [],
                        "description": "List of machines which are part of the role.\n\nThe machines are referenced by their `attributeName` in the `inventory.machines` attribute set.\n\nMemberships are declared here to determine which machines are part of the service.\n\nAlternatively, `tags` can be used to determine the membership, more dynamically.\n",
                        "examples": ["machineA"],
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "machines"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "tags": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "tags"
                          ]
                        },
                        "default": [],
                        "description": "List of tags which are used to determine the membership of the role.\n\nThe tags are matched against the `inventory.machines.<machineName>.tags` attribute set.\nIf a machine has at least one tag of the role, it is part of the role.\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "tags"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      }
                    }
                  },
                  "server": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "config": {
                        "$exportedModuleInfo": {
                          "path": []
                        },
                        "additionalProperties": false,
                        "properties": {
                          "directory": {
                            "$exportedModuleInfo": {
                              "path": ["clan", "borgbackup", "directory"]
                            },
                            "default": "/var/lib/borgbackup",
                            "description": "The directory where the borgbackup repositories are stored.\n",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "borgbackup-config-role-server",
                        "default": {}
                      },
                      "extraModules": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "default": [],
                        "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "extraModules"
                            ]
                          },
                          "oneOf": [
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": "string"
                            },
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": [
                                "boolean",
                                "integer",
                                "number",
                                "string",
                                "array",
                                "object",
                                "null"
                              ]
                            }
                          ]
                        },
                        "type": "array"
                      },
                      "machines": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "machines"
                          ]
                        },
                        "default": [],
                        "description": "List of machines which are part of the role.\n\nThe machines are referenced by their `attributeName` in the `inventory.machines` attribute set.\n\nMemberships are declared here to determine which machines are part of the service.\n\nAlternatively, `tags` can be used to determine the membership, more dynamically.\n",
                        "examples": ["machineA"],
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "machines"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "tags": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "tags"
                          ]
                        },
                        "default": [],
                        "description": "List of tags which are used to determine the membership of the role.\n\nThe tags are matched against the `inventory.machines.<machineName>.tags` attribute set.\nIf a machine has at least one tag of the role, it is part of the role.\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "tags"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "data-mesher": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "config": {
                "title": "data-mesher-config",
                "oneOf": [
                  {
                    "$exportedModuleInfo": {
                      "path": []
                    },
                    "additionalProperties": false,
                    "properties": {
                      "bootstrapNodes": {
                        "$exportedModuleInfo": {
                          "path": ["clan", "data-mesher", "bootstrapNodes"]
                        },
                        "default": null,
                        "description": "A list of bootstrap nodes that act as an initial gateway when joining\nthe cluster.\n",
                        "examples": ["192.168.1.1:7946", "192.168.1.2:7946"],
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "$exportedModuleInfo": {
                              "path": ["clan", "data-mesher", "bootstrapNodes"]
                            },
                            "items": {
                              "$exportedModuleInfo": {
                                "path": [
                                  "clan",
                                  "data-mesher",
                                  "bootstrapNodes"
                                ]
                              },
                              "type": "string"
                            },
                            "type": "array"
                          }
                        ]
                      },
                      "network": {
                        "$exportedModuleInfo": {
                          "path": ["network"]
                        },
                        "additionalProperties": false,
                        "properties": {
                          "hostTTL": {
                            "$exportedModuleInfo": {
                              "path": [
                                "clan",
                                "data-mesher",
                                "network",
                                "hostTTL"
                              ]
                            },
                            "default": "672h",
                            "description": "The TTL for hosts in the network, in the form of a Go time.Duration",
                            "examples": ["24h"],
                            "type": "string"
                          },
                          "interface": {
                            "$exportedModuleInfo": {
                              "path": [
                                "clan",
                                "data-mesher",
                                "network",
                                "interface"
                              ]
                            },
                            "description": "The interface over which cluster communication should be performed.\nAll the ip addresses associate with this interface will be part of\nour host claim, including both ipv4 and ipv6.\n\nThis should be set to an internal/VPN interface.\n",
                            "examples": ["tailscale0"],
                            "type": "string"
                          },
                          "port": {
                            "$exportedModuleInfo": {
                              "path": ["clan", "data-mesher", "network", "port"]
                            },
                            "default": 7946,
                            "description": "Port to listen on for cluster communication.\n",
                            "type": "integer"
                          },
                          "tld": {
                            "$exportedModuleInfo": {
                              "path": ["clan", "data-mesher", "network", "tld"]
                            },
                            "default": null,
                            "description": "Top level domain to use for the network",
                            "type": "string"
                          }
                        },
                        "required": ["interface"],
                        "type": "object"
                      }
                    },
                    "required": ["network"],
                    "type": "object",
                    "title": "data-mesher-config-role-admin"
                  },
                  {
                    "$exportedModuleInfo": {
                      "path": []
                    },
                    "additionalProperties": false,
                    "properties": {
                      "bootstrapNodes": {
                        "$exportedModuleInfo": {
                          "path": ["clan", "data-mesher", "bootstrapNodes"]
                        },
                        "default": null,
                        "description": "A list of bootstrap nodes that act as an initial gateway when joining\nthe cluster.\n",
                        "examples": ["192.168.1.1:7946", "192.168.1.2:7946"],
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "$exportedModuleInfo": {
                              "path": ["clan", "data-mesher", "bootstrapNodes"]
                            },
                            "items": {
                              "$exportedModuleInfo": {
                                "path": [
                                  "clan",
                                  "data-mesher",
                                  "bootstrapNodes"
                                ]
                              },
                              "type": "string"
                            },
                            "type": "array"
                          }
                        ]
                      },
                      "network": {
                        "$exportedModuleInfo": {
                          "path": ["network"]
                        },
                        "additionalProperties": false,
                        "properties": {
                          "interface": {
                            "$exportedModuleInfo": {
                              "path": [
                                "clan",
                                "data-mesher",
                                "network",
                                "interface"
                              ]
                            },
                            "description": "The interface over which cluster communication should be performed.\nAll the ip addresses associate with this interface will be part of\nour host claim, including both ipv4 and ipv6.\n\nThis should be set to an internal/VPN interface.\n",
                            "examples": ["tailscale0"],
                            "type": "string"
                          },
                          "port": {
                            "$exportedModuleInfo": {
                              "path": ["clan", "data-mesher", "network", "port"]
                            },
                            "default": 7946,
                            "description": "Port to listen on for cluster communication.\n",
                            "type": "integer"
                          }
                        },
                        "required": ["interface"],
                        "type": "object"
                      }
                    },
                    "required": ["network"],
                    "type": "object",
                    "title": "data-mesher-config-role-peer"
                  },
                  {
                    "$exportedModuleInfo": {
                      "path": []
                    },
                    "additionalProperties": false,
                    "properties": {
                      "bootstrapNodes": {
                        "$exportedModuleInfo": {
                          "path": ["clan", "data-mesher", "bootstrapNodes"]
                        },
                        "default": null,
                        "description": "A list of bootstrap nodes that act as an initial gateway when joining\nthe cluster.\n",
                        "examples": ["192.168.1.1:7946", "192.168.1.2:7946"],
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "$exportedModuleInfo": {
                              "path": ["clan", "data-mesher", "bootstrapNodes"]
                            },
                            "items": {
                              "$exportedModuleInfo": {
                                "path": [
                                  "clan",
                                  "data-mesher",
                                  "bootstrapNodes"
                                ]
                              },
                              "type": "string"
                            },
                            "type": "array"
                          }
                        ]
                      },
                      "network": {
                        "$exportedModuleInfo": {
                          "path": ["network"]
                        },
                        "additionalProperties": false,
                        "properties": {
                          "interface": {
                            "$exportedModuleInfo": {
                              "path": [
                                "clan",
                                "data-mesher",
                                "network",
                                "interface"
                              ]
                            },
                            "description": "The interface over which cluster communication should be performed.\nAll the ip addresses associate with this interface will be part of\nour host claim, including both ipv4 and ipv6.\n\nThis should be set to an internal/VPN interface.\n",
                            "examples": ["tailscale0"],
                            "type": "string"
                          },
                          "port": {
                            "$exportedModuleInfo": {
                              "path": ["clan", "data-mesher", "network", "port"]
                            },
                            "default": 7946,
                            "description": "Port to listen on for cluster communication.\n",
                            "type": "integer"
                          }
                        },
                        "required": ["interface"],
                        "type": "object"
                      }
                    },
                    "required": ["network"],
                    "type": "object",
                    "title": "data-mesher-config-role-signer"
                  }
                ],
                "type": "object",
                "default": {},
                "additionalProperties": false
              },
              "enabled": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "enabled"]
                },
                "default": true,
                "description": "Enable or disable the complete service.\n\nIf the service is disabled, it will not be added to any machine.\n\n!!! Note\n    This flag is primarily used to temporarily disable a service.\n    I.e. A 'backup service' without any 'server' might be incomplete and would cause failure if enabled.\n",
                "type": "boolean"
              },
              "extraModules": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "extraModules"]
                },
                "default": [],
                "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                "items": {
                  "$exportedModuleInfo": {
                    "path": ["services", "<name>", "extraModules"]
                  },
                  "oneOf": [
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": "string"
                    },
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": [
                        "boolean",
                        "integer",
                        "number",
                        "string",
                        "array",
                        "object",
                        "null"
                      ]
                    }
                  ]
                },
                "type": "array"
              },
              "machines": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "config": {
                      "title": "data-mesher-config",
                      "oneOf": [
                        {
                          "$exportedModuleInfo": {
                            "path": []
                          },
                          "additionalProperties": false,
                          "properties": {
                            "bootstrapNodes": {
                              "$exportedModuleInfo": {
                                "path": [
                                  "clan",
                                  "data-mesher",
                                  "bootstrapNodes"
                                ]
                              },
                              "default": null,
                              "description": "A list of bootstrap nodes that act as an initial gateway when joining\nthe cluster.\n",
                              "examples": [
                                "192.168.1.1:7946",
                                "192.168.1.2:7946"
                              ],
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "$exportedModuleInfo": {
                                    "path": [
                                      "clan",
                                      "data-mesher",
                                      "bootstrapNodes"
                                    ]
                                  },
                                  "items": {
                                    "$exportedModuleInfo": {
                                      "path": [
                                        "clan",
                                        "data-mesher",
                                        "bootstrapNodes"
                                      ]
                                    },
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              ]
                            },
                            "network": {
                              "$exportedModuleInfo": {
                                "path": ["network"]
                              },
                              "additionalProperties": false,
                              "properties": {
                                "hostTTL": {
                                  "$exportedModuleInfo": {
                                    "path": [
                                      "clan",
                                      "data-mesher",
                                      "network",
                                      "hostTTL"
                                    ]
                                  },
                                  "default": "672h",
                                  "description": "The TTL for hosts in the network, in the form of a Go time.Duration",
                                  "examples": ["24h"],
                                  "type": "string"
                                },
                                "interface": {
                                  "$exportedModuleInfo": {
                                    "path": [
                                      "clan",
                                      "data-mesher",
                                      "network",
                                      "interface"
                                    ]
                                  },
                                  "description": "The interface over which cluster communication should be performed.\nAll the ip addresses associate with this interface will be part of\nour host claim, including both ipv4 and ipv6.\n\nThis should be set to an internal/VPN interface.\n",
                                  "examples": ["tailscale0"],
                                  "type": "string"
                                },
                                "port": {
                                  "$exportedModuleInfo": {
                                    "path": [
                                      "clan",
                                      "data-mesher",
                                      "network",
                                      "port"
                                    ]
                                  },
                                  "default": 7946,
                                  "description": "Port to listen on for cluster communication.\n",
                                  "type": "integer"
                                },
                                "tld": {
                                  "$exportedModuleInfo": {
                                    "path": [
                                      "clan",
                                      "data-mesher",
                                      "network",
                                      "tld"
                                    ]
                                  },
                                  "default": null,
                                  "description": "Top level domain to use for the network",
                                  "type": "string"
                                }
                              },
                              "required": ["interface"],
                              "type": "object"
                            }
                          },
                          "required": ["network"],
                          "type": "object",
                          "title": "data-mesher-config-role-admin"
                        },
                        {
                          "$exportedModuleInfo": {
                            "path": []
                          },
                          "additionalProperties": false,
                          "properties": {
                            "bootstrapNodes": {
                              "$exportedModuleInfo": {
                                "path": [
                                  "clan",
                                  "data-mesher",
                                  "bootstrapNodes"
                                ]
                              },
                              "default": null,
                              "description": "A list of bootstrap nodes that act as an initial gateway when joining\nthe cluster.\n",
                              "examples": [
                                "192.168.1.1:7946",
                                "192.168.1.2:7946"
                              ],
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "$exportedModuleInfo": {
                                    "path": [
                                      "clan",
                                      "data-mesher",
                                      "bootstrapNodes"
                                    ]
                                  },
                                  "items": {
                                    "$exportedModuleInfo": {
                                      "path": [
                                        "clan",
                                        "data-mesher",
                                        "bootstrapNodes"
                                      ]
                                    },
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              ]
                            },
                            "network": {
                              "$exportedModuleInfo": {
                                "path": ["network"]
                              },
                              "additionalProperties": false,
                              "properties": {
                                "interface": {
                                  "$exportedModuleInfo": {
                                    "path": [
                                      "clan",
                                      "data-mesher",
                                      "network",
                                      "interface"
                                    ]
                                  },
                                  "description": "The interface over which cluster communication should be performed.\nAll the ip addresses associate with this interface will be part of\nour host claim, including both ipv4 and ipv6.\n\nThis should be set to an internal/VPN interface.\n",
                                  "examples": ["tailscale0"],
                                  "type": "string"
                                },
                                "port": {
                                  "$exportedModuleInfo": {
                                    "path": [
                                      "clan",
                                      "data-mesher",
                                      "network",
                                      "port"
                                    ]
                                  },
                                  "default": 7946,
                                  "description": "Port to listen on for cluster communication.\n",
                                  "type": "integer"
                                }
                              },
                              "required": ["interface"],
                              "type": "object"
                            }
                          },
                          "required": ["network"],
                          "type": "object",
                          "title": "data-mesher-config-role-peer"
                        },
                        {
                          "$exportedModuleInfo": {
                            "path": []
                          },
                          "additionalProperties": false,
                          "properties": {
                            "bootstrapNodes": {
                              "$exportedModuleInfo": {
                                "path": [
                                  "clan",
                                  "data-mesher",
                                  "bootstrapNodes"
                                ]
                              },
                              "default": null,
                              "description": "A list of bootstrap nodes that act as an initial gateway when joining\nthe cluster.\n",
                              "examples": [
                                "192.168.1.1:7946",
                                "192.168.1.2:7946"
                              ],
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "$exportedModuleInfo": {
                                    "path": [
                                      "clan",
                                      "data-mesher",
                                      "bootstrapNodes"
                                    ]
                                  },
                                  "items": {
                                    "$exportedModuleInfo": {
                                      "path": [
                                        "clan",
                                        "data-mesher",
                                        "bootstrapNodes"
                                      ]
                                    },
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              ]
                            },
                            "network": {
                              "$exportedModuleInfo": {
                                "path": ["network"]
                              },
                              "additionalProperties": false,
                              "properties": {
                                "interface": {
                                  "$exportedModuleInfo": {
                                    "path": [
                                      "clan",
                                      "data-mesher",
                                      "network",
                                      "interface"
                                    ]
                                  },
                                  "description": "The interface over which cluster communication should be performed.\nAll the ip addresses associate with this interface will be part of\nour host claim, including both ipv4 and ipv6.\n\nThis should be set to an internal/VPN interface.\n",
                                  "examples": ["tailscale0"],
                                  "type": "string"
                                },
                                "port": {
                                  "$exportedModuleInfo": {
                                    "path": [
                                      "clan",
                                      "data-mesher",
                                      "network",
                                      "port"
                                    ]
                                  },
                                  "default": 7946,
                                  "description": "Port to listen on for cluster communication.\n",
                                  "type": "integer"
                                }
                              },
                              "required": ["interface"],
                              "type": "object"
                            }
                          },
                          "required": ["network"],
                          "type": "object",
                          "title": "data-mesher-config-role-signer"
                        }
                      ],
                      "type": "object",
                      "default": {},
                      "additionalProperties": false
                    },
                    "extraModules": {
                      "$exportedModuleInfo": {
                        "path": [
                          "services",
                          "<name>",
                          "machines",
                          "<name>",
                          "extraModules"
                        ]
                      },
                      "default": [],
                      "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                      "items": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "machines",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "oneOf": [
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": "string"
                          },
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": [
                              "boolean",
                              "integer",
                              "number",
                              "string",
                              "array",
                              "object",
                              "null"
                            ]
                          }
                        ]
                      },
                      "type": "array"
                    }
                  }
                }
              },
              "meta": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "meta"]
                },
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "description"]
                    },
                    "default": null,
                    "description": "Optional freeform description\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "description"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "icon": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "icon"]
                    },
                    "default": null,
                    "description": "Under construction, will be used for the UI\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "icon"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "name": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "name"]
                    },
                    "default": "\u2039name\u203a",
                    "description": "Name of the machine or service\n",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "roles": {
                "title": "data-mesher-roles",
                "type": "object",
                "properties": {
                  "admin": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "config": {
                        "$exportedModuleInfo": {
                          "path": []
                        },
                        "additionalProperties": false,
                        "properties": {
                          "bootstrapNodes": {
                            "$exportedModuleInfo": {
                              "path": ["clan", "data-mesher", "bootstrapNodes"]
                            },
                            "default": null,
                            "description": "A list of bootstrap nodes that act as an initial gateway when joining\nthe cluster.\n",
                            "examples": [
                              "192.168.1.1:7946",
                              "192.168.1.2:7946"
                            ],
                            "oneOf": [
                              {
                                "type": "null"
                              },
                              {
                                "$exportedModuleInfo": {
                                  "path": [
                                    "clan",
                                    "data-mesher",
                                    "bootstrapNodes"
                                  ]
                                },
                                "items": {
                                  "$exportedModuleInfo": {
                                    "path": [
                                      "clan",
                                      "data-mesher",
                                      "bootstrapNodes"
                                    ]
                                  },
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            ]
                          },
                          "network": {
                            "$exportedModuleInfo": {
                              "path": ["network"]
                            },
                            "additionalProperties": false,
                            "properties": {
                              "hostTTL": {
                                "$exportedModuleInfo": {
                                  "path": [
                                    "clan",
                                    "data-mesher",
                                    "network",
                                    "hostTTL"
                                  ]
                                },
                                "default": "672h",
                                "description": "The TTL for hosts in the network, in the form of a Go time.Duration",
                                "examples": ["24h"],
                                "type": "string"
                              },
                              "interface": {
                                "$exportedModuleInfo": {
                                  "path": [
                                    "clan",
                                    "data-mesher",
                                    "network",
                                    "interface"
                                  ]
                                },
                                "description": "The interface over which cluster communication should be performed.\nAll the ip addresses associate with this interface will be part of\nour host claim, including both ipv4 and ipv6.\n\nThis should be set to an internal/VPN interface.\n",
                                "examples": ["tailscale0"],
                                "type": "string"
                              },
                              "port": {
                                "$exportedModuleInfo": {
                                  "path": [
                                    "clan",
                                    "data-mesher",
                                    "network",
                                    "port"
                                  ]
                                },
                                "default": 7946,
                                "description": "Port to listen on for cluster communication.\n",
                                "type": "integer"
                              },
                              "tld": {
                                "$exportedModuleInfo": {
                                  "path": [
                                    "clan",
                                    "data-mesher",
                                    "network",
                                    "tld"
                                  ]
                                },
                                "default": null,
                                "description": "Top level domain to use for the network",
                                "type": "string"
                              }
                            },
                            "required": ["interface"],
                            "type": "object"
                          }
                        },
                        "required": ["network"],
                        "type": "object",
                        "title": "data-mesher-config-role-admin",
                        "default": {}
                      },
                      "extraModules": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "default": [],
                        "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "extraModules"
                            ]
                          },
                          "oneOf": [
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": "string"
                            },
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": [
                                "boolean",
                                "integer",
                                "number",
                                "string",
                                "array",
                                "object",
                                "null"
                              ]
                            }
                          ]
                        },
                        "type": "array"
                      },
                      "machines": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "machines"
                          ]
                        },
                        "default": [],
                        "description": "List of machines which are part of the role.\n\nThe machines are referenced by their `attributeName` in the `inventory.machines` attribute set.\n\nMemberships are declared here to determine which machines are part of the service.\n\nAlternatively, `tags` can be used to determine the membership, more dynamically.\n",
                        "examples": ["machineA"],
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "machines"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "tags": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "tags"
                          ]
                        },
                        "default": [],
                        "description": "List of tags which are used to determine the membership of the role.\n\nThe tags are matched against the `inventory.machines.<machineName>.tags` attribute set.\nIf a machine has at least one tag of the role, it is part of the role.\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "tags"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      }
                    }
                  },
                  "peer": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "config": {
                        "$exportedModuleInfo": {
                          "path": []
                        },
                        "additionalProperties": false,
                        "properties": {
                          "bootstrapNodes": {
                            "$exportedModuleInfo": {
                              "path": ["clan", "data-mesher", "bootstrapNodes"]
                            },
                            "default": null,
                            "description": "A list of bootstrap nodes that act as an initial gateway when joining\nthe cluster.\n",
                            "examples": [
                              "192.168.1.1:7946",
                              "192.168.1.2:7946"
                            ],
                            "oneOf": [
                              {
                                "type": "null"
                              },
                              {
                                "$exportedModuleInfo": {
                                  "path": [
                                    "clan",
                                    "data-mesher",
                                    "bootstrapNodes"
                                  ]
                                },
                                "items": {
                                  "$exportedModuleInfo": {
                                    "path": [
                                      "clan",
                                      "data-mesher",
                                      "bootstrapNodes"
                                    ]
                                  },
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            ]
                          },
                          "network": {
                            "$exportedModuleInfo": {
                              "path": ["network"]
                            },
                            "additionalProperties": false,
                            "properties": {
                              "interface": {
                                "$exportedModuleInfo": {
                                  "path": [
                                    "clan",
                                    "data-mesher",
                                    "network",
                                    "interface"
                                  ]
                                },
                                "description": "The interface over which cluster communication should be performed.\nAll the ip addresses associate with this interface will be part of\nour host claim, including both ipv4 and ipv6.\n\nThis should be set to an internal/VPN interface.\n",
                                "examples": ["tailscale0"],
                                "type": "string"
                              },
                              "port": {
                                "$exportedModuleInfo": {
                                  "path": [
                                    "clan",
                                    "data-mesher",
                                    "network",
                                    "port"
                                  ]
                                },
                                "default": 7946,
                                "description": "Port to listen on for cluster communication.\n",
                                "type": "integer"
                              }
                            },
                            "required": ["interface"],
                            "type": "object"
                          }
                        },
                        "required": ["network"],
                        "type": "object",
                        "title": "data-mesher-config-role-peer",
                        "default": {}
                      },
                      "extraModules": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "default": [],
                        "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "extraModules"
                            ]
                          },
                          "oneOf": [
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": "string"
                            },
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": [
                                "boolean",
                                "integer",
                                "number",
                                "string",
                                "array",
                                "object",
                                "null"
                              ]
                            }
                          ]
                        },
                        "type": "array"
                      },
                      "machines": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "machines"
                          ]
                        },
                        "default": [],
                        "description": "List of machines which are part of the role.\n\nThe machines are referenced by their `attributeName` in the `inventory.machines` attribute set.\n\nMemberships are declared here to determine which machines are part of the service.\n\nAlternatively, `tags` can be used to determine the membership, more dynamically.\n",
                        "examples": ["machineA"],
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "machines"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "tags": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "tags"
                          ]
                        },
                        "default": [],
                        "description": "List of tags which are used to determine the membership of the role.\n\nThe tags are matched against the `inventory.machines.<machineName>.tags` attribute set.\nIf a machine has at least one tag of the role, it is part of the role.\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "tags"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      }
                    }
                  },
                  "signer": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "config": {
                        "$exportedModuleInfo": {
                          "path": []
                        },
                        "additionalProperties": false,
                        "properties": {
                          "bootstrapNodes": {
                            "$exportedModuleInfo": {
                              "path": ["clan", "data-mesher", "bootstrapNodes"]
                            },
                            "default": null,
                            "description": "A list of bootstrap nodes that act as an initial gateway when joining\nthe cluster.\n",
                            "examples": [
                              "192.168.1.1:7946",
                              "192.168.1.2:7946"
                            ],
                            "oneOf": [
                              {
                                "type": "null"
                              },
                              {
                                "$exportedModuleInfo": {
                                  "path": [
                                    "clan",
                                    "data-mesher",
                                    "bootstrapNodes"
                                  ]
                                },
                                "items": {
                                  "$exportedModuleInfo": {
                                    "path": [
                                      "clan",
                                      "data-mesher",
                                      "bootstrapNodes"
                                    ]
                                  },
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            ]
                          },
                          "network": {
                            "$exportedModuleInfo": {
                              "path": ["network"]
                            },
                            "additionalProperties": false,
                            "properties": {
                              "interface": {
                                "$exportedModuleInfo": {
                                  "path": [
                                    "clan",
                                    "data-mesher",
                                    "network",
                                    "interface"
                                  ]
                                },
                                "description": "The interface over which cluster communication should be performed.\nAll the ip addresses associate with this interface will be part of\nour host claim, including both ipv4 and ipv6.\n\nThis should be set to an internal/VPN interface.\n",
                                "examples": ["tailscale0"],
                                "type": "string"
                              },
                              "port": {
                                "$exportedModuleInfo": {
                                  "path": [
                                    "clan",
                                    "data-mesher",
                                    "network",
                                    "port"
                                  ]
                                },
                                "default": 7946,
                                "description": "Port to listen on for cluster communication.\n",
                                "type": "integer"
                              }
                            },
                            "required": ["interface"],
                            "type": "object"
                          }
                        },
                        "required": ["network"],
                        "type": "object",
                        "title": "data-mesher-config-role-signer",
                        "default": {}
                      },
                      "extraModules": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "default": [],
                        "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "extraModules"
                            ]
                          },
                          "oneOf": [
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": "string"
                            },
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": [
                                "boolean",
                                "integer",
                                "number",
                                "string",
                                "array",
                                "object",
                                "null"
                              ]
                            }
                          ]
                        },
                        "type": "array"
                      },
                      "machines": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "machines"
                          ]
                        },
                        "default": [],
                        "description": "List of machines which are part of the role.\n\nThe machines are referenced by their `attributeName` in the `inventory.machines` attribute set.\n\nMemberships are declared here to determine which machines are part of the service.\n\nAlternatively, `tags` can be used to determine the membership, more dynamically.\n",
                        "examples": ["machineA"],
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "machines"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "tags": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "tags"
                          ]
                        },
                        "default": [],
                        "description": "List of tags which are used to determine the membership of the role.\n\nThe tags are matched against the `inventory.machines.<machineName>.tags` attribute set.\nIf a machine has at least one tag of the role, it is part of the role.\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "tags"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "disk-id": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "config": {
                "title": "disk-id-config",
                "oneOf": [
                  {
                    "$exportedModuleInfo": {
                      "path": []
                    },
                    "additionalProperties": false,
                    "properties": {},
                    "type": "object",
                    "title": "disk-id-config-role-default"
                  }
                ],
                "type": "object",
                "default": {},
                "additionalProperties": false
              },
              "enabled": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "enabled"]
                },
                "default": true,
                "description": "Enable or disable the complete service.\n\nIf the service is disabled, it will not be added to any machine.\n\n!!! Note\n    This flag is primarily used to temporarily disable a service.\n    I.e. A 'backup service' without any 'server' might be incomplete and would cause failure if enabled.\n",
                "type": "boolean"
              },
              "extraModules": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "extraModules"]
                },
                "default": [],
                "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                "items": {
                  "$exportedModuleInfo": {
                    "path": ["services", "<name>", "extraModules"]
                  },
                  "oneOf": [
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": "string"
                    },
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": [
                        "boolean",
                        "integer",
                        "number",
                        "string",
                        "array",
                        "object",
                        "null"
                      ]
                    }
                  ]
                },
                "type": "array"
              },
              "machines": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "config": {
                      "title": "disk-id-config",
                      "oneOf": [
                        {
                          "$exportedModuleInfo": {
                            "path": []
                          },
                          "additionalProperties": false,
                          "properties": {},
                          "type": "object",
                          "title": "disk-id-config-role-default"
                        }
                      ],
                      "type": "object",
                      "default": {},
                      "additionalProperties": false
                    },
                    "extraModules": {
                      "$exportedModuleInfo": {
                        "path": [
                          "services",
                          "<name>",
                          "machines",
                          "<name>",
                          "extraModules"
                        ]
                      },
                      "default": [],
                      "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                      "items": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "machines",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "oneOf": [
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": "string"
                          },
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": [
                              "boolean",
                              "integer",
                              "number",
                              "string",
                              "array",
                              "object",
                              "null"
                            ]
                          }
                        ]
                      },
                      "type": "array"
                    }
                  }
                }
              },
              "meta": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "meta"]
                },
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "description"]
                    },
                    "default": null,
                    "description": "Optional freeform description\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "description"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "icon": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "icon"]
                    },
                    "default": null,
                    "description": "Under construction, will be used for the UI\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "icon"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "name": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "name"]
                    },
                    "default": "\u2039name\u203a",
                    "description": "Name of the machine or service\n",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "roles": {
                "title": "disk-id-roles",
                "type": "object",
                "properties": {
                  "default": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "config": {
                        "$exportedModuleInfo": {
                          "path": []
                        },
                        "additionalProperties": false,
                        "properties": {},
                        "type": "object",
                        "title": "disk-id-config-role-default",
                        "default": {}
                      },
                      "extraModules": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "default": [],
                        "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "extraModules"
                            ]
                          },
                          "oneOf": [
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": "string"
                            },
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": [
                                "boolean",
                                "integer",
                                "number",
                                "string",
                                "array",
                                "object",
                                "null"
                              ]
                            }
                          ]
                        },
                        "type": "array"
                      },
                      "machines": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "machines"
                          ]
                        },
                        "default": [],
                        "description": "List of machines which are part of the role.\n\nThe machines are referenced by their `attributeName` in the `inventory.machines` attribute set.\n\nMemberships are declared here to determine which machines are part of the service.\n\nAlternatively, `tags` can be used to determine the membership, more dynamically.\n",
                        "examples": ["machineA"],
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "machines"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "tags": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "tags"
                          ]
                        },
                        "default": [],
                        "description": "List of tags which are used to determine the membership of the role.\n\nThe tags are matched against the `inventory.machines.<machineName>.tags` attribute set.\nIf a machine has at least one tag of the role, it is part of the role.\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "tags"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "importer": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "config": {
                "title": "importer-config",
                "oneOf": [
                  {
                    "$exportedModuleInfo": {
                      "path": []
                    },
                    "additionalProperties": false,
                    "properties": {},
                    "type": "object",
                    "title": "importer-config-role-default"
                  }
                ],
                "type": "object",
                "default": {},
                "additionalProperties": false
              },
              "enabled": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "enabled"]
                },
                "default": true,
                "description": "Enable or disable the complete service.\n\nIf the service is disabled, it will not be added to any machine.\n\n!!! Note\n    This flag is primarily used to temporarily disable a service.\n    I.e. A 'backup service' without any 'server' might be incomplete and would cause failure if enabled.\n",
                "type": "boolean"
              },
              "extraModules": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "extraModules"]
                },
                "default": [],
                "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                "items": {
                  "$exportedModuleInfo": {
                    "path": ["services", "<name>", "extraModules"]
                  },
                  "oneOf": [
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": "string"
                    },
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": [
                        "boolean",
                        "integer",
                        "number",
                        "string",
                        "array",
                        "object",
                        "null"
                      ]
                    }
                  ]
                },
                "type": "array"
              },
              "machines": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "config": {
                      "title": "importer-config",
                      "oneOf": [
                        {
                          "$exportedModuleInfo": {
                            "path": []
                          },
                          "additionalProperties": false,
                          "properties": {},
                          "type": "object",
                          "title": "importer-config-role-default"
                        }
                      ],
                      "type": "object",
                      "default": {},
                      "additionalProperties": false
                    },
                    "extraModules": {
                      "$exportedModuleInfo": {
                        "path": [
                          "services",
                          "<name>",
                          "machines",
                          "<name>",
                          "extraModules"
                        ]
                      },
                      "default": [],
                      "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                      "items": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "machines",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "oneOf": [
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": "string"
                          },
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": [
                              "boolean",
                              "integer",
                              "number",
                              "string",
                              "array",
                              "object",
                              "null"
                            ]
                          }
                        ]
                      },
                      "type": "array"
                    }
                  }
                }
              },
              "meta": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "meta"]
                },
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "description"]
                    },
                    "default": null,
                    "description": "Optional freeform description\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "description"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "icon": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "icon"]
                    },
                    "default": null,
                    "description": "Under construction, will be used for the UI\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "icon"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "name": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "name"]
                    },
                    "default": "\u2039name\u203a",
                    "description": "Name of the machine or service\n",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "roles": {
                "title": "importer-roles",
                "type": "object",
                "properties": {
                  "default": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "config": {
                        "$exportedModuleInfo": {
                          "path": []
                        },
                        "additionalProperties": false,
                        "properties": {},
                        "type": "object",
                        "title": "importer-config-role-default",
                        "default": {}
                      },
                      "extraModules": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "default": [],
                        "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "extraModules"
                            ]
                          },
                          "oneOf": [
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": "string"
                            },
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": [
                                "boolean",
                                "integer",
                                "number",
                                "string",
                                "array",
                                "object",
                                "null"
                              ]
                            }
                          ]
                        },
                        "type": "array"
                      },
                      "machines": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "machines"
                          ]
                        },
                        "default": [],
                        "description": "List of machines which are part of the role.\n\nThe machines are referenced by their `attributeName` in the `inventory.machines` attribute set.\n\nMemberships are declared here to determine which machines are part of the service.\n\nAlternatively, `tags` can be used to determine the membership, more dynamically.\n",
                        "examples": ["machineA"],
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "machines"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "tags": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "tags"
                          ]
                        },
                        "default": [],
                        "description": "List of tags which are used to determine the membership of the role.\n\nThe tags are matched against the `inventory.machines.<machineName>.tags` attribute set.\nIf a machine has at least one tag of the role, it is part of the role.\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "tags"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "iwd": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "config": {
                "title": "iwd-config",
                "oneOf": [
                  {
                    "$exportedModuleInfo": {
                      "path": []
                    },
                    "additionalProperties": false,
                    "properties": {
                      "networks": {
                        "$exportedModuleInfo": {
                          "path": ["clan", "iwd", "networks"]
                        },
                        "additionalProperties": {
                          "$exportedModuleInfo": {
                            "path": ["clan", "iwd", "networks", "<name>"]
                          },
                          "additionalProperties": false,
                          "properties": {
                            "AutoConnect": {
                              "$exportedModuleInfo": {
                                "path": [
                                  "clan",
                                  "iwd",
                                  "networks",
                                  "<name>",
                                  "AutoConnect"
                                ]
                              },
                              "default": true,
                              "description": "Automatically try to join this wifi network",
                              "type": "boolean"
                            },
                            "ssid": {
                              "$exportedModuleInfo": {
                                "path": [
                                  "clan",
                                  "iwd",
                                  "networks",
                                  "<name>",
                                  "ssid"
                                ]
                              },
                              "default": "\u2039name\u203a",
                              "description": "The name of the wifi network",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "default": {},
                        "description": "Wifi networks to predefine",
                        "type": "object"
                      }
                    },
                    "type": "object",
                    "title": "iwd-config-role-default"
                  }
                ],
                "type": "object",
                "default": {},
                "additionalProperties": false
              },
              "enabled": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "enabled"]
                },
                "default": true,
                "description": "Enable or disable the complete service.\n\nIf the service is disabled, it will not be added to any machine.\n\n!!! Note\n    This flag is primarily used to temporarily disable a service.\n    I.e. A 'backup service' without any 'server' might be incomplete and would cause failure if enabled.\n",
                "type": "boolean"
              },
              "extraModules": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "extraModules"]
                },
                "default": [],
                "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                "items": {
                  "$exportedModuleInfo": {
                    "path": ["services", "<name>", "extraModules"]
                  },
                  "oneOf": [
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": "string"
                    },
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": [
                        "boolean",
                        "integer",
                        "number",
                        "string",
                        "array",
                        "object",
                        "null"
                      ]
                    }
                  ]
                },
                "type": "array"
              },
              "machines": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "config": {
                      "title": "iwd-config",
                      "oneOf": [
                        {
                          "$exportedModuleInfo": {
                            "path": []
                          },
                          "additionalProperties": false,
                          "properties": {
                            "networks": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "iwd", "networks"]
                              },
                              "additionalProperties": {
                                "$exportedModuleInfo": {
                                  "path": ["clan", "iwd", "networks", "<name>"]
                                },
                                "additionalProperties": false,
                                "properties": {
                                  "AutoConnect": {
                                    "$exportedModuleInfo": {
                                      "path": [
                                        "clan",
                                        "iwd",
                                        "networks",
                                        "<name>",
                                        "AutoConnect"
                                      ]
                                    },
                                    "default": true,
                                    "description": "Automatically try to join this wifi network",
                                    "type": "boolean"
                                  },
                                  "ssid": {
                                    "$exportedModuleInfo": {
                                      "path": [
                                        "clan",
                                        "iwd",
                                        "networks",
                                        "<name>",
                                        "ssid"
                                      ]
                                    },
                                    "default": "\u2039name\u203a",
                                    "description": "The name of the wifi network",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "default": {},
                              "description": "Wifi networks to predefine",
                              "type": "object"
                            }
                          },
                          "type": "object",
                          "title": "iwd-config-role-default"
                        }
                      ],
                      "type": "object",
                      "default": {},
                      "additionalProperties": false
                    },
                    "extraModules": {
                      "$exportedModuleInfo": {
                        "path": [
                          "services",
                          "<name>",
                          "machines",
                          "<name>",
                          "extraModules"
                        ]
                      },
                      "default": [],
                      "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                      "items": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "machines",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "oneOf": [
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": "string"
                          },
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": [
                              "boolean",
                              "integer",
                              "number",
                              "string",
                              "array",
                              "object",
                              "null"
                            ]
                          }
                        ]
                      },
                      "type": "array"
                    }
                  }
                }
              },
              "meta": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "meta"]
                },
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "description"]
                    },
                    "default": null,
                    "description": "Optional freeform description\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "description"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "icon": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "icon"]
                    },
                    "default": null,
                    "description": "Under construction, will be used for the UI\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "icon"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "name": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "name"]
                    },
                    "default": "\u2039name\u203a",
                    "description": "Name of the machine or service\n",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "roles": {
                "title": "iwd-roles",
                "type": "object",
                "properties": {
                  "default": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "config": {
                        "$exportedModuleInfo": {
                          "path": []
                        },
                        "additionalProperties": false,
                        "properties": {
                          "networks": {
                            "$exportedModuleInfo": {
                              "path": ["clan", "iwd", "networks"]
                            },
                            "additionalProperties": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "iwd", "networks", "<name>"]
                              },
                              "additionalProperties": false,
                              "properties": {
                                "AutoConnect": {
                                  "$exportedModuleInfo": {
                                    "path": [
                                      "clan",
                                      "iwd",
                                      "networks",
                                      "<name>",
                                      "AutoConnect"
                                    ]
                                  },
                                  "default": true,
                                  "description": "Automatically try to join this wifi network",
                                  "type": "boolean"
                                },
                                "ssid": {
                                  "$exportedModuleInfo": {
                                    "path": [
                                      "clan",
                                      "iwd",
                                      "networks",
                                      "<name>",
                                      "ssid"
                                    ]
                                  },
                                  "default": "\u2039name\u203a",
                                  "description": "The name of the wifi network",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "default": {},
                            "description": "Wifi networks to predefine",
                            "type": "object"
                          }
                        },
                        "type": "object",
                        "title": "iwd-config-role-default",
                        "default": {}
                      },
                      "extraModules": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "default": [],
                        "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "extraModules"
                            ]
                          },
                          "oneOf": [
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": "string"
                            },
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": [
                                "boolean",
                                "integer",
                                "number",
                                "string",
                                "array",
                                "object",
                                "null"
                              ]
                            }
                          ]
                        },
                        "type": "array"
                      },
                      "machines": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "machines"
                          ]
                        },
                        "default": [],
                        "description": "List of machines which are part of the role.\n\nThe machines are referenced by their `attributeName` in the `inventory.machines` attribute set.\n\nMemberships are declared here to determine which machines are part of the service.\n\nAlternatively, `tags` can be used to determine the membership, more dynamically.\n",
                        "examples": ["machineA"],
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "machines"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "tags": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "tags"
                          ]
                        },
                        "default": [],
                        "description": "List of tags which are used to determine the membership of the role.\n\nThe tags are matched against the `inventory.machines.<machineName>.tags` attribute set.\nIf a machine has at least one tag of the role, it is part of the role.\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "tags"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "machine-id": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "config": {
                "title": "machine-id-config",
                "oneOf": [
                  {
                    "$exportedModuleInfo": {
                      "path": []
                    },
                    "additionalProperties": false,
                    "properties": {},
                    "type": "object",
                    "title": "machine-id-config-role-default"
                  }
                ],
                "type": "object",
                "default": {},
                "additionalProperties": false
              },
              "enabled": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "enabled"]
                },
                "default": true,
                "description": "Enable or disable the complete service.\n\nIf the service is disabled, it will not be added to any machine.\n\n!!! Note\n    This flag is primarily used to temporarily disable a service.\n    I.e. A 'backup service' without any 'server' might be incomplete and would cause failure if enabled.\n",
                "type": "boolean"
              },
              "extraModules": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "extraModules"]
                },
                "default": [],
                "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                "items": {
                  "$exportedModuleInfo": {
                    "path": ["services", "<name>", "extraModules"]
                  },
                  "oneOf": [
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": "string"
                    },
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": [
                        "boolean",
                        "integer",
                        "number",
                        "string",
                        "array",
                        "object",
                        "null"
                      ]
                    }
                  ]
                },
                "type": "array"
              },
              "machines": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "config": {
                      "title": "machine-id-config",
                      "oneOf": [
                        {
                          "$exportedModuleInfo": {
                            "path": []
                          },
                          "additionalProperties": false,
                          "properties": {},
                          "type": "object",
                          "title": "machine-id-config-role-default"
                        }
                      ],
                      "type": "object",
                      "default": {},
                      "additionalProperties": false
                    },
                    "extraModules": {
                      "$exportedModuleInfo": {
                        "path": [
                          "services",
                          "<name>",
                          "machines",
                          "<name>",
                          "extraModules"
                        ]
                      },
                      "default": [],
                      "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                      "items": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "machines",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "oneOf": [
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": "string"
                          },
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": [
                              "boolean",
                              "integer",
                              "number",
                              "string",
                              "array",
                              "object",
                              "null"
                            ]
                          }
                        ]
                      },
                      "type": "array"
                    }
                  }
                }
              },
              "meta": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "meta"]
                },
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "description"]
                    },
                    "default": null,
                    "description": "Optional freeform description\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "description"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "icon": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "icon"]
                    },
                    "default": null,
                    "description": "Under construction, will be used for the UI\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "icon"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "name": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "name"]
                    },
                    "default": "\u2039name\u203a",
                    "description": "Name of the machine or service\n",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "roles": {
                "title": "machine-id-roles",
                "type": "object",
                "properties": {
                  "default": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "config": {
                        "$exportedModuleInfo": {
                          "path": []
                        },
                        "additionalProperties": false,
                        "properties": {},
                        "type": "object",
                        "title": "machine-id-config-role-default",
                        "default": {}
                      },
                      "extraModules": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "default": [],
                        "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "extraModules"
                            ]
                          },
                          "oneOf": [
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": "string"
                            },
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": [
                                "boolean",
                                "integer",
                                "number",
                                "string",
                                "array",
                                "object",
                                "null"
                              ]
                            }
                          ]
                        },
                        "type": "array"
                      },
                      "machines": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "machines"
                          ]
                        },
                        "default": [],
                        "description": "List of machines which are part of the role.\n\nThe machines are referenced by their `attributeName` in the `inventory.machines` attribute set.\n\nMemberships are declared here to determine which machines are part of the service.\n\nAlternatively, `tags` can be used to determine the membership, more dynamically.\n",
                        "examples": ["machineA"],
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "machines"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "tags": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "tags"
                          ]
                        },
                        "default": [],
                        "description": "List of tags which are used to determine the membership of the role.\n\nThe tags are matched against the `inventory.machines.<machineName>.tags` attribute set.\nIf a machine has at least one tag of the role, it is part of the role.\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "tags"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "mumble": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "config": {
                "title": "mumble-config",
                "oneOf": [
                  {
                    "$exportedModuleInfo": {
                      "path": []
                    },
                    "additionalProperties": false,
                    "properties": {},
                    "type": "object",
                    "title": "mumble-config-role-server"
                  }
                ],
                "type": "object",
                "default": {},
                "additionalProperties": false
              },
              "enabled": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "enabled"]
                },
                "default": true,
                "description": "Enable or disable the complete service.\n\nIf the service is disabled, it will not be added to any machine.\n\n!!! Note\n    This flag is primarily used to temporarily disable a service.\n    I.e. A 'backup service' without any 'server' might be incomplete and would cause failure if enabled.\n",
                "type": "boolean"
              },
              "extraModules": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "extraModules"]
                },
                "default": [],
                "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                "items": {
                  "$exportedModuleInfo": {
                    "path": ["services", "<name>", "extraModules"]
                  },
                  "oneOf": [
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": "string"
                    },
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": [
                        "boolean",
                        "integer",
                        "number",
                        "string",
                        "array",
                        "object",
                        "null"
                      ]
                    }
                  ]
                },
                "type": "array"
              },
              "machines": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "config": {
                      "title": "mumble-config",
                      "oneOf": [
                        {
                          "$exportedModuleInfo": {
                            "path": []
                          },
                          "additionalProperties": false,
                          "properties": {},
                          "type": "object",
                          "title": "mumble-config-role-server"
                        }
                      ],
                      "type": "object",
                      "default": {},
                      "additionalProperties": false
                    },
                    "extraModules": {
                      "$exportedModuleInfo": {
                        "path": [
                          "services",
                          "<name>",
                          "machines",
                          "<name>",
                          "extraModules"
                        ]
                      },
                      "default": [],
                      "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                      "items": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "machines",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "oneOf": [
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": "string"
                          },
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": [
                              "boolean",
                              "integer",
                              "number",
                              "string",
                              "array",
                              "object",
                              "null"
                            ]
                          }
                        ]
                      },
                      "type": "array"
                    }
                  }
                }
              },
              "meta": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "meta"]
                },
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "description"]
                    },
                    "default": null,
                    "description": "Optional freeform description\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "description"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "icon": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "icon"]
                    },
                    "default": null,
                    "description": "Under construction, will be used for the UI\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "icon"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "name": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "name"]
                    },
                    "default": "\u2039name\u203a",
                    "description": "Name of the machine or service\n",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "roles": {
                "title": "mumble-roles",
                "type": "object",
                "properties": {
                  "server": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "config": {
                        "$exportedModuleInfo": {
                          "path": []
                        },
                        "additionalProperties": false,
                        "properties": {},
                        "type": "object",
                        "title": "mumble-config-role-server",
                        "default": {}
                      },
                      "extraModules": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "default": [],
                        "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "extraModules"
                            ]
                          },
                          "oneOf": [
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": "string"
                            },
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": [
                                "boolean",
                                "integer",
                                "number",
                                "string",
                                "array",
                                "object",
                                "null"
                              ]
                            }
                          ]
                        },
                        "type": "array"
                      },
                      "machines": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "machines"
                          ]
                        },
                        "default": [],
                        "description": "List of machines which are part of the role.\n\nThe machines are referenced by their `attributeName` in the `inventory.machines` attribute set.\n\nMemberships are declared here to determine which machines are part of the service.\n\nAlternatively, `tags` can be used to determine the membership, more dynamically.\n",
                        "examples": ["machineA"],
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "machines"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "tags": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "tags"
                          ]
                        },
                        "default": [],
                        "description": "List of tags which are used to determine the membership of the role.\n\nThe tags are matched against the `inventory.machines.<machineName>.tags` attribute set.\nIf a machine has at least one tag of the role, it is part of the role.\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "tags"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "mycelium": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "config": {
                "title": "mycelium-config",
                "oneOf": [
                  {
                    "$exportedModuleInfo": {
                      "path": []
                    },
                    "additionalProperties": false,
                    "properties": {
                      "addHostedPublicNodes": {
                        "$exportedModuleInfo": {
                          "path": ["clan", "mycelium", "addHostedPublicNodes"]
                        },
                        "default": true,
                        "description": "Add hosted Public nodes",
                        "type": "boolean"
                      },
                      "openFirewall": {
                        "$exportedModuleInfo": {
                          "path": ["clan", "mycelium", "openFirewall"]
                        },
                        "default": true,
                        "description": "Open the firewall for mycelium",
                        "type": "boolean"
                      }
                    },
                    "type": "object",
                    "title": "mycelium-config-role-peer"
                  }
                ],
                "type": "object",
                "default": {},
                "additionalProperties": false
              },
              "enabled": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "enabled"]
                },
                "default": true,
                "description": "Enable or disable the complete service.\n\nIf the service is disabled, it will not be added to any machine.\n\n!!! Note\n    This flag is primarily used to temporarily disable a service.\n    I.e. A 'backup service' without any 'server' might be incomplete and would cause failure if enabled.\n",
                "type": "boolean"
              },
              "extraModules": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "extraModules"]
                },
                "default": [],
                "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                "items": {
                  "$exportedModuleInfo": {
                    "path": ["services", "<name>", "extraModules"]
                  },
                  "oneOf": [
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": "string"
                    },
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": [
                        "boolean",
                        "integer",
                        "number",
                        "string",
                        "array",
                        "object",
                        "null"
                      ]
                    }
                  ]
                },
                "type": "array"
              },
              "machines": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "config": {
                      "title": "mycelium-config",
                      "oneOf": [
                        {
                          "$exportedModuleInfo": {
                            "path": []
                          },
                          "additionalProperties": false,
                          "properties": {
                            "addHostedPublicNodes": {
                              "$exportedModuleInfo": {
                                "path": [
                                  "clan",
                                  "mycelium",
                                  "addHostedPublicNodes"
                                ]
                              },
                              "default": true,
                              "description": "Add hosted Public nodes",
                              "type": "boolean"
                            },
                            "openFirewall": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "mycelium", "openFirewall"]
                              },
                              "default": true,
                              "description": "Open the firewall for mycelium",
                              "type": "boolean"
                            }
                          },
                          "type": "object",
                          "title": "mycelium-config-role-peer"
                        }
                      ],
                      "type": "object",
                      "default": {},
                      "additionalProperties": false
                    },
                    "extraModules": {
                      "$exportedModuleInfo": {
                        "path": [
                          "services",
                          "<name>",
                          "machines",
                          "<name>",
                          "extraModules"
                        ]
                      },
                      "default": [],
                      "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                      "items": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "machines",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "oneOf": [
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": "string"
                          },
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": [
                              "boolean",
                              "integer",
                              "number",
                              "string",
                              "array",
                              "object",
                              "null"
                            ]
                          }
                        ]
                      },
                      "type": "array"
                    }
                  }
                }
              },
              "meta": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "meta"]
                },
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "description"]
                    },
                    "default": null,
                    "description": "Optional freeform description\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "description"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "icon": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "icon"]
                    },
                    "default": null,
                    "description": "Under construction, will be used for the UI\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "icon"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "name": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "name"]
                    },
                    "default": "\u2039name\u203a",
                    "description": "Name of the machine or service\n",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "roles": {
                "title": "mycelium-roles",
                "type": "object",
                "properties": {
                  "peer": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "config": {
                        "$exportedModuleInfo": {
                          "path": []
                        },
                        "additionalProperties": false,
                        "properties": {
                          "addHostedPublicNodes": {
                            "$exportedModuleInfo": {
                              "path": [
                                "clan",
                                "mycelium",
                                "addHostedPublicNodes"
                              ]
                            },
                            "default": true,
                            "description": "Add hosted Public nodes",
                            "type": "boolean"
                          },
                          "openFirewall": {
                            "$exportedModuleInfo": {
                              "path": ["clan", "mycelium", "openFirewall"]
                            },
                            "default": true,
                            "description": "Open the firewall for mycelium",
                            "type": "boolean"
                          }
                        },
                        "type": "object",
                        "title": "mycelium-config-role-peer",
                        "default": {}
                      },
                      "extraModules": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "default": [],
                        "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "extraModules"
                            ]
                          },
                          "oneOf": [
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": "string"
                            },
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": [
                                "boolean",
                                "integer",
                                "number",
                                "string",
                                "array",
                                "object",
                                "null"
                              ]
                            }
                          ]
                        },
                        "type": "array"
                      },
                      "machines": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "machines"
                          ]
                        },
                        "default": [],
                        "description": "List of machines which are part of the role.\n\nThe machines are referenced by their `attributeName` in the `inventory.machines` attribute set.\n\nMemberships are declared here to determine which machines are part of the service.\n\nAlternatively, `tags` can be used to determine the membership, more dynamically.\n",
                        "examples": ["machineA"],
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "machines"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "tags": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "tags"
                          ]
                        },
                        "default": [],
                        "description": "List of tags which are used to determine the membership of the role.\n\nThe tags are matched against the `inventory.machines.<machineName>.tags` attribute set.\nIf a machine has at least one tag of the role, it is part of the role.\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "tags"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "packages": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "config": {
                "title": "packages-config",
                "oneOf": [
                  {
                    "$exportedModuleInfo": {
                      "path": []
                    },
                    "additionalProperties": false,
                    "properties": {
                      "packages": {
                        "$exportedModuleInfo": {
                          "path": ["clan", "packages", "packages"]
                        },
                        "description": "The packages to install on the machine",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": ["clan", "packages", "packages"]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "required": ["packages"],
                    "type": "object",
                    "title": "packages-config-role-default"
                  }
                ],
                "type": "object",
                "default": {},
                "additionalProperties": false
              },
              "enabled": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "enabled"]
                },
                "default": true,
                "description": "Enable or disable the complete service.\n\nIf the service is disabled, it will not be added to any machine.\n\n!!! Note\n    This flag is primarily used to temporarily disable a service.\n    I.e. A 'backup service' without any 'server' might be incomplete and would cause failure if enabled.\n",
                "type": "boolean"
              },
              "extraModules": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "extraModules"]
                },
                "default": [],
                "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                "items": {
                  "$exportedModuleInfo": {
                    "path": ["services", "<name>", "extraModules"]
                  },
                  "oneOf": [
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": "string"
                    },
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": [
                        "boolean",
                        "integer",
                        "number",
                        "string",
                        "array",
                        "object",
                        "null"
                      ]
                    }
                  ]
                },
                "type": "array"
              },
              "machines": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "config": {
                      "title": "packages-config",
                      "oneOf": [
                        {
                          "$exportedModuleInfo": {
                            "path": []
                          },
                          "additionalProperties": false,
                          "properties": {
                            "packages": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "packages", "packages"]
                              },
                              "description": "The packages to install on the machine",
                              "items": {
                                "$exportedModuleInfo": {
                                  "path": ["clan", "packages", "packages"]
                                },
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "required": ["packages"],
                          "type": "object",
                          "title": "packages-config-role-default"
                        }
                      ],
                      "type": "object",
                      "default": {},
                      "additionalProperties": false
                    },
                    "extraModules": {
                      "$exportedModuleInfo": {
                        "path": [
                          "services",
                          "<name>",
                          "machines",
                          "<name>",
                          "extraModules"
                        ]
                      },
                      "default": [],
                      "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                      "items": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "machines",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "oneOf": [
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": "string"
                          },
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": [
                              "boolean",
                              "integer",
                              "number",
                              "string",
                              "array",
                              "object",
                              "null"
                            ]
                          }
                        ]
                      },
                      "type": "array"
                    }
                  }
                }
              },
              "meta": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "meta"]
                },
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "description"]
                    },
                    "default": null,
                    "description": "Optional freeform description\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "description"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "icon": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "icon"]
                    },
                    "default": null,
                    "description": "Under construction, will be used for the UI\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "icon"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "name": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "name"]
                    },
                    "default": "\u2039name\u203a",
                    "description": "Name of the machine or service\n",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "roles": {
                "title": "packages-roles",
                "type": "object",
                "properties": {
                  "default": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "config": {
                        "$exportedModuleInfo": {
                          "path": []
                        },
                        "additionalProperties": false,
                        "properties": {
                          "packages": {
                            "$exportedModuleInfo": {
                              "path": ["clan", "packages", "packages"]
                            },
                            "description": "The packages to install on the machine",
                            "items": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "packages", "packages"]
                              },
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": ["packages"],
                        "type": "object",
                        "title": "packages-config-role-default",
                        "default": {}
                      },
                      "extraModules": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "default": [],
                        "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "extraModules"
                            ]
                          },
                          "oneOf": [
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": "string"
                            },
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": [
                                "boolean",
                                "integer",
                                "number",
                                "string",
                                "array",
                                "object",
                                "null"
                              ]
                            }
                          ]
                        },
                        "type": "array"
                      },
                      "machines": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "machines"
                          ]
                        },
                        "default": [],
                        "description": "List of machines which are part of the role.\n\nThe machines are referenced by their `attributeName` in the `inventory.machines` attribute set.\n\nMemberships are declared here to determine which machines are part of the service.\n\nAlternatively, `tags` can be used to determine the membership, more dynamically.\n",
                        "examples": ["machineA"],
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "machines"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "tags": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "tags"
                          ]
                        },
                        "default": [],
                        "description": "List of tags which are used to determine the membership of the role.\n\nThe tags are matched against the `inventory.machines.<machineName>.tags` attribute set.\nIf a machine has at least one tag of the role, it is part of the role.\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "tags"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "root-password": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "config": {
                "title": "root-password-config",
                "oneOf": [
                  {
                    "$exportedModuleInfo": {
                      "path": []
                    },
                    "additionalProperties": false,
                    "properties": {},
                    "type": "object",
                    "title": "root-password-config-role-default"
                  }
                ],
                "type": "object",
                "default": {},
                "additionalProperties": false
              },
              "enabled": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "enabled"]
                },
                "default": true,
                "description": "Enable or disable the complete service.\n\nIf the service is disabled, it will not be added to any machine.\n\n!!! Note\n    This flag is primarily used to temporarily disable a service.\n    I.e. A 'backup service' without any 'server' might be incomplete and would cause failure if enabled.\n",
                "type": "boolean"
              },
              "extraModules": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "extraModules"]
                },
                "default": [],
                "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                "items": {
                  "$exportedModuleInfo": {
                    "path": ["services", "<name>", "extraModules"]
                  },
                  "oneOf": [
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": "string"
                    },
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": [
                        "boolean",
                        "integer",
                        "number",
                        "string",
                        "array",
                        "object",
                        "null"
                      ]
                    }
                  ]
                },
                "type": "array"
              },
              "machines": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "config": {
                      "title": "root-password-config",
                      "oneOf": [
                        {
                          "$exportedModuleInfo": {
                            "path": []
                          },
                          "additionalProperties": false,
                          "properties": {},
                          "type": "object",
                          "title": "root-password-config-role-default"
                        }
                      ],
                      "type": "object",
                      "default": {},
                      "additionalProperties": false
                    },
                    "extraModules": {
                      "$exportedModuleInfo": {
                        "path": [
                          "services",
                          "<name>",
                          "machines",
                          "<name>",
                          "extraModules"
                        ]
                      },
                      "default": [],
                      "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                      "items": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "machines",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "oneOf": [
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": "string"
                          },
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": [
                              "boolean",
                              "integer",
                              "number",
                              "string",
                              "array",
                              "object",
                              "null"
                            ]
                          }
                        ]
                      },
                      "type": "array"
                    }
                  }
                }
              },
              "meta": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "meta"]
                },
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "description"]
                    },
                    "default": null,
                    "description": "Optional freeform description\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "description"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "icon": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "icon"]
                    },
                    "default": null,
                    "description": "Under construction, will be used for the UI\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "icon"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "name": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "name"]
                    },
                    "default": "\u2039name\u203a",
                    "description": "Name of the machine or service\n",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "roles": {
                "title": "root-password-roles",
                "type": "object",
                "properties": {
                  "default": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "config": {
                        "$exportedModuleInfo": {
                          "path": []
                        },
                        "additionalProperties": false,
                        "properties": {},
                        "type": "object",
                        "title": "root-password-config-role-default",
                        "default": {}
                      },
                      "extraModules": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "default": [],
                        "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "extraModules"
                            ]
                          },
                          "oneOf": [
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": "string"
                            },
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": [
                                "boolean",
                                "integer",
                                "number",
                                "string",
                                "array",
                                "object",
                                "null"
                              ]
                            }
                          ]
                        },
                        "type": "array"
                      },
                      "machines": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "machines"
                          ]
                        },
                        "default": [],
                        "description": "List of machines which are part of the role.\n\nThe machines are referenced by their `attributeName` in the `inventory.machines` attribute set.\n\nMemberships are declared here to determine which machines are part of the service.\n\nAlternatively, `tags` can be used to determine the membership, more dynamically.\n",
                        "examples": ["machineA"],
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "machines"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "tags": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "tags"
                          ]
                        },
                        "default": [],
                        "description": "List of tags which are used to determine the membership of the role.\n\nThe tags are matched against the `inventory.machines.<machineName>.tags` attribute set.\nIf a machine has at least one tag of the role, it is part of the role.\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "tags"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "single-disk": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "config": {
                "title": "single-disk-config",
                "oneOf": [
                  {
                    "$exportedModuleInfo": {
                      "path": []
                    },
                    "additionalProperties": false,
                    "properties": {
                      "device": {
                        "$exportedModuleInfo": {
                          "path": ["clan", "single-disk", "device"]
                        },
                        "default": null,
                        "description": "The primary disk device to install the system on",
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "$exportedModuleInfo": {
                              "path": ["clan", "single-disk", "device"]
                            },
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "type": "object",
                    "title": "single-disk-config-role-default"
                  }
                ],
                "type": "object",
                "default": {},
                "additionalProperties": false
              },
              "enabled": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "enabled"]
                },
                "default": true,
                "description": "Enable or disable the complete service.\n\nIf the service is disabled, it will not be added to any machine.\n\n!!! Note\n    This flag is primarily used to temporarily disable a service.\n    I.e. A 'backup service' without any 'server' might be incomplete and would cause failure if enabled.\n",
                "type": "boolean"
              },
              "extraModules": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "extraModules"]
                },
                "default": [],
                "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                "items": {
                  "$exportedModuleInfo": {
                    "path": ["services", "<name>", "extraModules"]
                  },
                  "oneOf": [
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": "string"
                    },
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": [
                        "boolean",
                        "integer",
                        "number",
                        "string",
                        "array",
                        "object",
                        "null"
                      ]
                    }
                  ]
                },
                "type": "array"
              },
              "machines": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "config": {
                      "title": "single-disk-config",
                      "oneOf": [
                        {
                          "$exportedModuleInfo": {
                            "path": []
                          },
                          "additionalProperties": false,
                          "properties": {
                            "device": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "single-disk", "device"]
                              },
                              "default": null,
                              "description": "The primary disk device to install the system on",
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "$exportedModuleInfo": {
                                    "path": ["clan", "single-disk", "device"]
                                  },
                                  "type": "string"
                                }
                              ]
                            }
                          },
                          "type": "object",
                          "title": "single-disk-config-role-default"
                        }
                      ],
                      "type": "object",
                      "default": {},
                      "additionalProperties": false
                    },
                    "extraModules": {
                      "$exportedModuleInfo": {
                        "path": [
                          "services",
                          "<name>",
                          "machines",
                          "<name>",
                          "extraModules"
                        ]
                      },
                      "default": [],
                      "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                      "items": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "machines",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "oneOf": [
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": "string"
                          },
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": [
                              "boolean",
                              "integer",
                              "number",
                              "string",
                              "array",
                              "object",
                              "null"
                            ]
                          }
                        ]
                      },
                      "type": "array"
                    }
                  }
                }
              },
              "meta": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "meta"]
                },
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "description"]
                    },
                    "default": null,
                    "description": "Optional freeform description\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "description"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "icon": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "icon"]
                    },
                    "default": null,
                    "description": "Under construction, will be used for the UI\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "icon"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "name": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "name"]
                    },
                    "default": "\u2039name\u203a",
                    "description": "Name of the machine or service\n",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "roles": {
                "title": "single-disk-roles",
                "type": "object",
                "properties": {
                  "default": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "config": {
                        "$exportedModuleInfo": {
                          "path": []
                        },
                        "additionalProperties": false,
                        "properties": {
                          "device": {
                            "$exportedModuleInfo": {
                              "path": ["clan", "single-disk", "device"]
                            },
                            "default": null,
                            "description": "The primary disk device to install the system on",
                            "oneOf": [
                              {
                                "type": "null"
                              },
                              {
                                "$exportedModuleInfo": {
                                  "path": ["clan", "single-disk", "device"]
                                },
                                "type": "string"
                              }
                            ]
                          }
                        },
                        "type": "object",
                        "title": "single-disk-config-role-default",
                        "default": {}
                      },
                      "extraModules": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "default": [],
                        "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "extraModules"
                            ]
                          },
                          "oneOf": [
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": "string"
                            },
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": [
                                "boolean",
                                "integer",
                                "number",
                                "string",
                                "array",
                                "object",
                                "null"
                              ]
                            }
                          ]
                        },
                        "type": "array"
                      },
                      "machines": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "machines"
                          ]
                        },
                        "default": [],
                        "description": "List of machines which are part of the role.\n\nThe machines are referenced by their `attributeName` in the `inventory.machines` attribute set.\n\nMemberships are declared here to determine which machines are part of the service.\n\nAlternatively, `tags` can be used to determine the membership, more dynamically.\n",
                        "examples": ["machineA"],
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "machines"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "tags": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "tags"
                          ]
                        },
                        "default": [],
                        "description": "List of tags which are used to determine the membership of the role.\n\nThe tags are matched against the `inventory.machines.<machineName>.tags` attribute set.\nIf a machine has at least one tag of the role, it is part of the role.\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "tags"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "sshd": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "config": {
                "title": "sshd-config",
                "oneOf": [
                  {
                    "$exportedModuleInfo": {
                      "path": []
                    },
                    "additionalProperties": false,
                    "properties": {
                      "certificate": {
                        "$exportedModuleInfo": {
                          "path": ["certificate"]
                        },
                        "additionalProperties": false,
                        "properties": {
                          "searchDomains": {
                            "$exportedModuleInfo": {
                              "path": [
                                "clan",
                                "sshd",
                                "certificate",
                                "searchDomains"
                              ]
                            },
                            "default": [],
                            "description": "List of domains to include in the certificate. This option will prepend the machine name in front of each domain before adding it to the certificate.",
                            "examples": ["mydomain.com"],
                            "items": {
                              "$exportedModuleInfo": {
                                "path": [
                                  "clan",
                                  "sshd",
                                  "certificate",
                                  "searchDomains"
                                ]
                              },
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "required": ["certificate"],
                    "type": "object",
                    "title": "sshd-config-role-client"
                  },
                  {
                    "$exportedModuleInfo": {
                      "path": []
                    },
                    "additionalProperties": false,
                    "properties": {
                      "certificate": {
                        "$exportedModuleInfo": {
                          "path": ["certificate"]
                        },
                        "additionalProperties": false,
                        "properties": {
                          "searchDomains": {
                            "$exportedModuleInfo": {
                              "path": [
                                "clan",
                                "sshd",
                                "certificate",
                                "searchDomains"
                              ]
                            },
                            "default": [],
                            "description": "List of domains to include in the certificate. This option will prepend the machine name in front of each domain before adding it to the certificate.",
                            "examples": ["mydomain.com"],
                            "items": {
                              "$exportedModuleInfo": {
                                "path": [
                                  "clan",
                                  "sshd",
                                  "certificate",
                                  "searchDomains"
                                ]
                              },
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "hostKeys": {
                        "$exportedModuleInfo": {
                          "path": ["hostKeys"]
                        },
                        "additionalProperties": false,
                        "properties": {
                          "rsa": {
                            "$exportedModuleInfo": {
                              "path": ["hostKeys", "rsa"]
                            },
                            "additionalProperties": false,
                            "properties": {
                              "enable": {
                                "$exportedModuleInfo": {
                                  "path": [
                                    "clan",
                                    "sshd",
                                    "hostKeys",
                                    "rsa",
                                    "enable"
                                  ]
                                },
                                "default": false,
                                "description": "Whether to enable Generate RSA host key.",
                                "examples": [true],
                                "type": "boolean"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "required": ["rsa"],
                        "type": "object"
                      }
                    },
                    "required": ["certificate", "hostKeys"],
                    "type": "object",
                    "title": "sshd-config-role-server"
                  }
                ],
                "type": "object",
                "default": {},
                "additionalProperties": false
              },
              "enabled": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "enabled"]
                },
                "default": true,
                "description": "Enable or disable the complete service.\n\nIf the service is disabled, it will not be added to any machine.\n\n!!! Note\n    This flag is primarily used to temporarily disable a service.\n    I.e. A 'backup service' without any 'server' might be incomplete and would cause failure if enabled.\n",
                "type": "boolean"
              },
              "extraModules": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "extraModules"]
                },
                "default": [],
                "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                "items": {
                  "$exportedModuleInfo": {
                    "path": ["services", "<name>", "extraModules"]
                  },
                  "oneOf": [
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": "string"
                    },
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": [
                        "boolean",
                        "integer",
                        "number",
                        "string",
                        "array",
                        "object",
                        "null"
                      ]
                    }
                  ]
                },
                "type": "array"
              },
              "machines": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "config": {
                      "title": "sshd-config",
                      "oneOf": [
                        {
                          "$exportedModuleInfo": {
                            "path": []
                          },
                          "additionalProperties": false,
                          "properties": {
                            "certificate": {
                              "$exportedModuleInfo": {
                                "path": ["certificate"]
                              },
                              "additionalProperties": false,
                              "properties": {
                                "searchDomains": {
                                  "$exportedModuleInfo": {
                                    "path": [
                                      "clan",
                                      "sshd",
                                      "certificate",
                                      "searchDomains"
                                    ]
                                  },
                                  "default": [],
                                  "description": "List of domains to include in the certificate. This option will prepend the machine name in front of each domain before adding it to the certificate.",
                                  "examples": ["mydomain.com"],
                                  "items": {
                                    "$exportedModuleInfo": {
                                      "path": [
                                        "clan",
                                        "sshd",
                                        "certificate",
                                        "searchDomains"
                                      ]
                                    },
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "required": ["certificate"],
                          "type": "object",
                          "title": "sshd-config-role-client"
                        },
                        {
                          "$exportedModuleInfo": {
                            "path": []
                          },
                          "additionalProperties": false,
                          "properties": {
                            "certificate": {
                              "$exportedModuleInfo": {
                                "path": ["certificate"]
                              },
                              "additionalProperties": false,
                              "properties": {
                                "searchDomains": {
                                  "$exportedModuleInfo": {
                                    "path": [
                                      "clan",
                                      "sshd",
                                      "certificate",
                                      "searchDomains"
                                    ]
                                  },
                                  "default": [],
                                  "description": "List of domains to include in the certificate. This option will prepend the machine name in front of each domain before adding it to the certificate.",
                                  "examples": ["mydomain.com"],
                                  "items": {
                                    "$exportedModuleInfo": {
                                      "path": [
                                        "clan",
                                        "sshd",
                                        "certificate",
                                        "searchDomains"
                                      ]
                                    },
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "hostKeys": {
                              "$exportedModuleInfo": {
                                "path": ["hostKeys"]
                              },
                              "additionalProperties": false,
                              "properties": {
                                "rsa": {
                                  "$exportedModuleInfo": {
                                    "path": ["hostKeys", "rsa"]
                                  },
                                  "additionalProperties": false,
                                  "properties": {
                                    "enable": {
                                      "$exportedModuleInfo": {
                                        "path": [
                                          "clan",
                                          "sshd",
                                          "hostKeys",
                                          "rsa",
                                          "enable"
                                        ]
                                      },
                                      "default": false,
                                      "description": "Whether to enable Generate RSA host key.",
                                      "examples": [true],
                                      "type": "boolean"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "required": ["rsa"],
                              "type": "object"
                            }
                          },
                          "required": ["certificate", "hostKeys"],
                          "type": "object",
                          "title": "sshd-config-role-server"
                        }
                      ],
                      "type": "object",
                      "default": {},
                      "additionalProperties": false
                    },
                    "extraModules": {
                      "$exportedModuleInfo": {
                        "path": [
                          "services",
                          "<name>",
                          "machines",
                          "<name>",
                          "extraModules"
                        ]
                      },
                      "default": [],
                      "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                      "items": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "machines",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "oneOf": [
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": "string"
                          },
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": [
                              "boolean",
                              "integer",
                              "number",
                              "string",
                              "array",
                              "object",
                              "null"
                            ]
                          }
                        ]
                      },
                      "type": "array"
                    }
                  }
                }
              },
              "meta": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "meta"]
                },
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "description"]
                    },
                    "default": null,
                    "description": "Optional freeform description\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "description"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "icon": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "icon"]
                    },
                    "default": null,
                    "description": "Under construction, will be used for the UI\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "icon"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "name": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "name"]
                    },
                    "default": "\u2039name\u203a",
                    "description": "Name of the machine or service\n",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "roles": {
                "title": "sshd-roles",
                "type": "object",
                "properties": {
                  "client": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "config": {
                        "$exportedModuleInfo": {
                          "path": []
                        },
                        "additionalProperties": false,
                        "properties": {
                          "certificate": {
                            "$exportedModuleInfo": {
                              "path": ["certificate"]
                            },
                            "additionalProperties": false,
                            "properties": {
                              "searchDomains": {
                                "$exportedModuleInfo": {
                                  "path": [
                                    "clan",
                                    "sshd",
                                    "certificate",
                                    "searchDomains"
                                  ]
                                },
                                "default": [],
                                "description": "List of domains to include in the certificate. This option will prepend the machine name in front of each domain before adding it to the certificate.",
                                "examples": ["mydomain.com"],
                                "items": {
                                  "$exportedModuleInfo": {
                                    "path": [
                                      "clan",
                                      "sshd",
                                      "certificate",
                                      "searchDomains"
                                    ]
                                  },
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "required": ["certificate"],
                        "type": "object",
                        "title": "sshd-config-role-client",
                        "default": {}
                      },
                      "extraModules": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "default": [],
                        "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "extraModules"
                            ]
                          },
                          "oneOf": [
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": "string"
                            },
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": [
                                "boolean",
                                "integer",
                                "number",
                                "string",
                                "array",
                                "object",
                                "null"
                              ]
                            }
                          ]
                        },
                        "type": "array"
                      },
                      "machines": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "machines"
                          ]
                        },
                        "default": [],
                        "description": "List of machines which are part of the role.\n\nThe machines are referenced by their `attributeName` in the `inventory.machines` attribute set.\n\nMemberships are declared here to determine which machines are part of the service.\n\nAlternatively, `tags` can be used to determine the membership, more dynamically.\n",
                        "examples": ["machineA"],
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "machines"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "tags": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "tags"
                          ]
                        },
                        "default": [],
                        "description": "List of tags which are used to determine the membership of the role.\n\nThe tags are matched against the `inventory.machines.<machineName>.tags` attribute set.\nIf a machine has at least one tag of the role, it is part of the role.\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "tags"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      }
                    }
                  },
                  "server": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "config": {
                        "$exportedModuleInfo": {
                          "path": []
                        },
                        "additionalProperties": false,
                        "properties": {
                          "certificate": {
                            "$exportedModuleInfo": {
                              "path": ["certificate"]
                            },
                            "additionalProperties": false,
                            "properties": {
                              "searchDomains": {
                                "$exportedModuleInfo": {
                                  "path": [
                                    "clan",
                                    "sshd",
                                    "certificate",
                                    "searchDomains"
                                  ]
                                },
                                "default": [],
                                "description": "List of domains to include in the certificate. This option will prepend the machine name in front of each domain before adding it to the certificate.",
                                "examples": ["mydomain.com"],
                                "items": {
                                  "$exportedModuleInfo": {
                                    "path": [
                                      "clan",
                                      "sshd",
                                      "certificate",
                                      "searchDomains"
                                    ]
                                  },
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          "hostKeys": {
                            "$exportedModuleInfo": {
                              "path": ["hostKeys"]
                            },
                            "additionalProperties": false,
                            "properties": {
                              "rsa": {
                                "$exportedModuleInfo": {
                                  "path": ["hostKeys", "rsa"]
                                },
                                "additionalProperties": false,
                                "properties": {
                                  "enable": {
                                    "$exportedModuleInfo": {
                                      "path": [
                                        "clan",
                                        "sshd",
                                        "hostKeys",
                                        "rsa",
                                        "enable"
                                      ]
                                    },
                                    "default": false,
                                    "description": "Whether to enable Generate RSA host key.",
                                    "examples": [true],
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "required": ["rsa"],
                            "type": "object"
                          }
                        },
                        "required": ["certificate", "hostKeys"],
                        "type": "object",
                        "title": "sshd-config-role-server",
                        "default": {}
                      },
                      "extraModules": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "default": [],
                        "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "extraModules"
                            ]
                          },
                          "oneOf": [
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": "string"
                            },
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": [
                                "boolean",
                                "integer",
                                "number",
                                "string",
                                "array",
                                "object",
                                "null"
                              ]
                            }
                          ]
                        },
                        "type": "array"
                      },
                      "machines": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "machines"
                          ]
                        },
                        "default": [],
                        "description": "List of machines which are part of the role.\n\nThe machines are referenced by their `attributeName` in the `inventory.machines` attribute set.\n\nMemberships are declared here to determine which machines are part of the service.\n\nAlternatively, `tags` can be used to determine the membership, more dynamically.\n",
                        "examples": ["machineA"],
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "machines"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "tags": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "tags"
                          ]
                        },
                        "default": [],
                        "description": "List of tags which are used to determine the membership of the role.\n\nThe tags are matched against the `inventory.machines.<machineName>.tags` attribute set.\nIf a machine has at least one tag of the role, it is part of the role.\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "tags"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "state-version": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "config": {
                "title": "state-version-config",
                "oneOf": [
                  {
                    "$exportedModuleInfo": {
                      "path": []
                    },
                    "additionalProperties": false,
                    "properties": {},
                    "type": "object",
                    "title": "state-version-config-role-default"
                  }
                ],
                "type": "object",
                "default": {},
                "additionalProperties": false
              },
              "enabled": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "enabled"]
                },
                "default": true,
                "description": "Enable or disable the complete service.\n\nIf the service is disabled, it will not be added to any machine.\n\n!!! Note\n    This flag is primarily used to temporarily disable a service.\n    I.e. A 'backup service' without any 'server' might be incomplete and would cause failure if enabled.\n",
                "type": "boolean"
              },
              "extraModules": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "extraModules"]
                },
                "default": [],
                "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                "items": {
                  "$exportedModuleInfo": {
                    "path": ["services", "<name>", "extraModules"]
                  },
                  "oneOf": [
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": "string"
                    },
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": [
                        "boolean",
                        "integer",
                        "number",
                        "string",
                        "array",
                        "object",
                        "null"
                      ]
                    }
                  ]
                },
                "type": "array"
              },
              "machines": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "config": {
                      "title": "state-version-config",
                      "oneOf": [
                        {
                          "$exportedModuleInfo": {
                            "path": []
                          },
                          "additionalProperties": false,
                          "properties": {},
                          "type": "object",
                          "title": "state-version-config-role-default"
                        }
                      ],
                      "type": "object",
                      "default": {},
                      "additionalProperties": false
                    },
                    "extraModules": {
                      "$exportedModuleInfo": {
                        "path": [
                          "services",
                          "<name>",
                          "machines",
                          "<name>",
                          "extraModules"
                        ]
                      },
                      "default": [],
                      "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                      "items": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "machines",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "oneOf": [
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": "string"
                          },
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": [
                              "boolean",
                              "integer",
                              "number",
                              "string",
                              "array",
                              "object",
                              "null"
                            ]
                          }
                        ]
                      },
                      "type": "array"
                    }
                  }
                }
              },
              "meta": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "meta"]
                },
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "description"]
                    },
                    "default": null,
                    "description": "Optional freeform description\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "description"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "icon": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "icon"]
                    },
                    "default": null,
                    "description": "Under construction, will be used for the UI\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "icon"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "name": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "name"]
                    },
                    "default": "\u2039name\u203a",
                    "description": "Name of the machine or service\n",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "roles": {
                "title": "state-version-roles",
                "type": "object",
                "properties": {
                  "default": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "config": {
                        "$exportedModuleInfo": {
                          "path": []
                        },
                        "additionalProperties": false,
                        "properties": {},
                        "type": "object",
                        "title": "state-version-config-role-default",
                        "default": {}
                      },
                      "extraModules": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "default": [],
                        "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "extraModules"
                            ]
                          },
                          "oneOf": [
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": "string"
                            },
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": [
                                "boolean",
                                "integer",
                                "number",
                                "string",
                                "array",
                                "object",
                                "null"
                              ]
                            }
                          ]
                        },
                        "type": "array"
                      },
                      "machines": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "machines"
                          ]
                        },
                        "default": [],
                        "description": "List of machines which are part of the role.\n\nThe machines are referenced by their `attributeName` in the `inventory.machines` attribute set.\n\nMemberships are declared here to determine which machines are part of the service.\n\nAlternatively, `tags` can be used to determine the membership, more dynamically.\n",
                        "examples": ["machineA"],
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "machines"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "tags": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "tags"
                          ]
                        },
                        "default": [],
                        "description": "List of tags which are used to determine the membership of the role.\n\nThe tags are matched against the `inventory.machines.<machineName>.tags` attribute set.\nIf a machine has at least one tag of the role, it is part of the role.\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "tags"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "syncthing": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "config": {
                "title": "syncthing-config",
                "oneOf": [
                  {
                    "$exportedModuleInfo": {
                      "path": []
                    },
                    "additionalProperties": false,
                    "properties": {
                      "autoAcceptDevices": {
                        "$exportedModuleInfo": {
                          "path": ["clan", "syncthing", "autoAcceptDevices"]
                        },
                        "default": false,
                        "description": "Auto accept incoming device requests.\nShould only be used on the introducer.\n",
                        "type": "boolean"
                      },
                      "autoShares": {
                        "$exportedModuleInfo": {
                          "path": ["clan", "syncthing", "autoShares"]
                        },
                        "default": [],
                        "description": "Auto share the following Folders by their ID's with introduced devices.\nShould only be used on the introducer.\n",
                        "examples": ["folder1", "folder2"],
                        "items": {
                          "$exportedModuleInfo": {
                            "path": ["clan", "syncthing", "autoShares"]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "id": {
                        "$exportedModuleInfo": {
                          "defaultText": "config.clan.core.vars.generators.syncthing.files.\"id\".value",
                          "path": ["clan", "syncthing", "id"]
                        },
                        "description": "The ID of the machine.\nIt is generated automatically by default.\n",
                        "examples": [
                          "BABNJY4-G2ICDLF-QQEG7DD-N3OBNGF-BCCOFK6-MV3K7QJ-2WUZHXS-7DTW4AS"
                        ],
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "$exportedModuleInfo": {
                              "path": ["clan", "syncthing", "id"]
                            },
                            "type": "string"
                          }
                        ]
                      },
                      "introducer": {
                        "$exportedModuleInfo": {
                          "path": ["clan", "syncthing", "introducer"]
                        },
                        "default": null,
                        "description": "The introducer for the machine.\n",
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "$exportedModuleInfo": {
                              "path": ["clan", "syncthing", "introducer"]
                            },
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "required": ["id"],
                    "type": "object",
                    "title": "syncthing-config-role-introducer"
                  },
                  {
                    "$exportedModuleInfo": {
                      "path": []
                    },
                    "additionalProperties": false,
                    "properties": {
                      "autoAcceptDevices": {
                        "$exportedModuleInfo": {
                          "path": ["clan", "syncthing", "autoAcceptDevices"]
                        },
                        "default": false,
                        "description": "Auto accept incoming device requests.\nShould only be used on the introducer.\n",
                        "type": "boolean"
                      },
                      "autoShares": {
                        "$exportedModuleInfo": {
                          "path": ["clan", "syncthing", "autoShares"]
                        },
                        "default": [],
                        "description": "Auto share the following Folders by their ID's with introduced devices.\nShould only be used on the introducer.\n",
                        "examples": ["folder1", "folder2"],
                        "items": {
                          "$exportedModuleInfo": {
                            "path": ["clan", "syncthing", "autoShares"]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "id": {
                        "$exportedModuleInfo": {
                          "defaultText": "config.clan.core.vars.generators.syncthing.files.\"id\".value",
                          "path": ["clan", "syncthing", "id"]
                        },
                        "description": "The ID of the machine.\nIt is generated automatically by default.\n",
                        "examples": [
                          "BABNJY4-G2ICDLF-QQEG7DD-N3OBNGF-BCCOFK6-MV3K7QJ-2WUZHXS-7DTW4AS"
                        ],
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "$exportedModuleInfo": {
                              "path": ["clan", "syncthing", "id"]
                            },
                            "type": "string"
                          }
                        ]
                      },
                      "introducer": {
                        "$exportedModuleInfo": {
                          "path": ["clan", "syncthing", "introducer"]
                        },
                        "default": null,
                        "description": "The introducer for the machine.\n",
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "$exportedModuleInfo": {
                              "path": ["clan", "syncthing", "introducer"]
                            },
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "required": ["id"],
                    "type": "object",
                    "title": "syncthing-config-role-peer"
                  }
                ],
                "type": "object",
                "default": {},
                "additionalProperties": false
              },
              "enabled": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "enabled"]
                },
                "default": true,
                "description": "Enable or disable the complete service.\n\nIf the service is disabled, it will not be added to any machine.\n\n!!! Note\n    This flag is primarily used to temporarily disable a service.\n    I.e. A 'backup service' without any 'server' might be incomplete and would cause failure if enabled.\n",
                "type": "boolean"
              },
              "extraModules": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "extraModules"]
                },
                "default": [],
                "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                "items": {
                  "$exportedModuleInfo": {
                    "path": ["services", "<name>", "extraModules"]
                  },
                  "oneOf": [
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": "string"
                    },
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": [
                        "boolean",
                        "integer",
                        "number",
                        "string",
                        "array",
                        "object",
                        "null"
                      ]
                    }
                  ]
                },
                "type": "array"
              },
              "machines": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "config": {
                      "title": "syncthing-config",
                      "oneOf": [
                        {
                          "$exportedModuleInfo": {
                            "path": []
                          },
                          "additionalProperties": false,
                          "properties": {
                            "autoAcceptDevices": {
                              "$exportedModuleInfo": {
                                "path": [
                                  "clan",
                                  "syncthing",
                                  "autoAcceptDevices"
                                ]
                              },
                              "default": false,
                              "description": "Auto accept incoming device requests.\nShould only be used on the introducer.\n",
                              "type": "boolean"
                            },
                            "autoShares": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "syncthing", "autoShares"]
                              },
                              "default": [],
                              "description": "Auto share the following Folders by their ID's with introduced devices.\nShould only be used on the introducer.\n",
                              "examples": ["folder1", "folder2"],
                              "items": {
                                "$exportedModuleInfo": {
                                  "path": ["clan", "syncthing", "autoShares"]
                                },
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "id": {
                              "$exportedModuleInfo": {
                                "defaultText": "config.clan.core.vars.generators.syncthing.files.\"id\".value",
                                "path": ["clan", "syncthing", "id"]
                              },
                              "description": "The ID of the machine.\nIt is generated automatically by default.\n",
                              "examples": [
                                "BABNJY4-G2ICDLF-QQEG7DD-N3OBNGF-BCCOFK6-MV3K7QJ-2WUZHXS-7DTW4AS"
                              ],
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "$exportedModuleInfo": {
                                    "path": ["clan", "syncthing", "id"]
                                  },
                                  "type": "string"
                                }
                              ]
                            },
                            "introducer": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "syncthing", "introducer"]
                              },
                              "default": null,
                              "description": "The introducer for the machine.\n",
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "$exportedModuleInfo": {
                                    "path": ["clan", "syncthing", "introducer"]
                                  },
                                  "type": "string"
                                }
                              ]
                            }
                          },
                          "required": ["id"],
                          "type": "object",
                          "title": "syncthing-config-role-introducer"
                        },
                        {
                          "$exportedModuleInfo": {
                            "path": []
                          },
                          "additionalProperties": false,
                          "properties": {
                            "autoAcceptDevices": {
                              "$exportedModuleInfo": {
                                "path": [
                                  "clan",
                                  "syncthing",
                                  "autoAcceptDevices"
                                ]
                              },
                              "default": false,
                              "description": "Auto accept incoming device requests.\nShould only be used on the introducer.\n",
                              "type": "boolean"
                            },
                            "autoShares": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "syncthing", "autoShares"]
                              },
                              "default": [],
                              "description": "Auto share the following Folders by their ID's with introduced devices.\nShould only be used on the introducer.\n",
                              "examples": ["folder1", "folder2"],
                              "items": {
                                "$exportedModuleInfo": {
                                  "path": ["clan", "syncthing", "autoShares"]
                                },
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "id": {
                              "$exportedModuleInfo": {
                                "defaultText": "config.clan.core.vars.generators.syncthing.files.\"id\".value",
                                "path": ["clan", "syncthing", "id"]
                              },
                              "description": "The ID of the machine.\nIt is generated automatically by default.\n",
                              "examples": [
                                "BABNJY4-G2ICDLF-QQEG7DD-N3OBNGF-BCCOFK6-MV3K7QJ-2WUZHXS-7DTW4AS"
                              ],
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "$exportedModuleInfo": {
                                    "path": ["clan", "syncthing", "id"]
                                  },
                                  "type": "string"
                                }
                              ]
                            },
                            "introducer": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "syncthing", "introducer"]
                              },
                              "default": null,
                              "description": "The introducer for the machine.\n",
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "$exportedModuleInfo": {
                                    "path": ["clan", "syncthing", "introducer"]
                                  },
                                  "type": "string"
                                }
                              ]
                            }
                          },
                          "required": ["id"],
                          "type": "object",
                          "title": "syncthing-config-role-peer"
                        }
                      ],
                      "type": "object",
                      "default": {},
                      "additionalProperties": false
                    },
                    "extraModules": {
                      "$exportedModuleInfo": {
                        "path": [
                          "services",
                          "<name>",
                          "machines",
                          "<name>",
                          "extraModules"
                        ]
                      },
                      "default": [],
                      "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                      "items": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "machines",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "oneOf": [
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": "string"
                          },
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": [
                              "boolean",
                              "integer",
                              "number",
                              "string",
                              "array",
                              "object",
                              "null"
                            ]
                          }
                        ]
                      },
                      "type": "array"
                    }
                  }
                }
              },
              "meta": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "meta"]
                },
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "description"]
                    },
                    "default": null,
                    "description": "Optional freeform description\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "description"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "icon": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "icon"]
                    },
                    "default": null,
                    "description": "Under construction, will be used for the UI\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "icon"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "name": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "name"]
                    },
                    "default": "\u2039name\u203a",
                    "description": "Name of the machine or service\n",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "roles": {
                "title": "syncthing-roles",
                "type": "object",
                "properties": {
                  "introducer": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "config": {
                        "$exportedModuleInfo": {
                          "path": []
                        },
                        "additionalProperties": false,
                        "properties": {
                          "autoAcceptDevices": {
                            "$exportedModuleInfo": {
                              "path": ["clan", "syncthing", "autoAcceptDevices"]
                            },
                            "default": false,
                            "description": "Auto accept incoming device requests.\nShould only be used on the introducer.\n",
                            "type": "boolean"
                          },
                          "autoShares": {
                            "$exportedModuleInfo": {
                              "path": ["clan", "syncthing", "autoShares"]
                            },
                            "default": [],
                            "description": "Auto share the following Folders by their ID's with introduced devices.\nShould only be used on the introducer.\n",
                            "examples": ["folder1", "folder2"],
                            "items": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "syncthing", "autoShares"]
                              },
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "id": {
                            "$exportedModuleInfo": {
                              "defaultText": "config.clan.core.vars.generators.syncthing.files.\"id\".value",
                              "path": ["clan", "syncthing", "id"]
                            },
                            "description": "The ID of the machine.\nIt is generated automatically by default.\n",
                            "examples": [
                              "BABNJY4-G2ICDLF-QQEG7DD-N3OBNGF-BCCOFK6-MV3K7QJ-2WUZHXS-7DTW4AS"
                            ],
                            "oneOf": [
                              {
                                "type": "null"
                              },
                              {
                                "$exportedModuleInfo": {
                                  "path": ["clan", "syncthing", "id"]
                                },
                                "type": "string"
                              }
                            ]
                          },
                          "introducer": {
                            "$exportedModuleInfo": {
                              "path": ["clan", "syncthing", "introducer"]
                            },
                            "default": null,
                            "description": "The introducer for the machine.\n",
                            "oneOf": [
                              {
                                "type": "null"
                              },
                              {
                                "$exportedModuleInfo": {
                                  "path": ["clan", "syncthing", "introducer"]
                                },
                                "type": "string"
                              }
                            ]
                          }
                        },
                        "required": ["id"],
                        "type": "object",
                        "title": "syncthing-config-role-introducer",
                        "default": {}
                      },
                      "extraModules": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "default": [],
                        "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "extraModules"
                            ]
                          },
                          "oneOf": [
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": "string"
                            },
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": [
                                "boolean",
                                "integer",
                                "number",
                                "string",
                                "array",
                                "object",
                                "null"
                              ]
                            }
                          ]
                        },
                        "type": "array"
                      },
                      "machines": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "machines"
                          ]
                        },
                        "default": [],
                        "description": "List of machines which are part of the role.\n\nThe machines are referenced by their `attributeName` in the `inventory.machines` attribute set.\n\nMemberships are declared here to determine which machines are part of the service.\n\nAlternatively, `tags` can be used to determine the membership, more dynamically.\n",
                        "examples": ["machineA"],
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "machines"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "tags": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "tags"
                          ]
                        },
                        "default": [],
                        "description": "List of tags which are used to determine the membership of the role.\n\nThe tags are matched against the `inventory.machines.<machineName>.tags` attribute set.\nIf a machine has at least one tag of the role, it is part of the role.\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "tags"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      }
                    }
                  },
                  "peer": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "config": {
                        "$exportedModuleInfo": {
                          "path": []
                        },
                        "additionalProperties": false,
                        "properties": {
                          "autoAcceptDevices": {
                            "$exportedModuleInfo": {
                              "path": ["clan", "syncthing", "autoAcceptDevices"]
                            },
                            "default": false,
                            "description": "Auto accept incoming device requests.\nShould only be used on the introducer.\n",
                            "type": "boolean"
                          },
                          "autoShares": {
                            "$exportedModuleInfo": {
                              "path": ["clan", "syncthing", "autoShares"]
                            },
                            "default": [],
                            "description": "Auto share the following Folders by their ID's with introduced devices.\nShould only be used on the introducer.\n",
                            "examples": ["folder1", "folder2"],
                            "items": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "syncthing", "autoShares"]
                              },
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "id": {
                            "$exportedModuleInfo": {
                              "defaultText": "config.clan.core.vars.generators.syncthing.files.\"id\".value",
                              "path": ["clan", "syncthing", "id"]
                            },
                            "description": "The ID of the machine.\nIt is generated automatically by default.\n",
                            "examples": [
                              "BABNJY4-G2ICDLF-QQEG7DD-N3OBNGF-BCCOFK6-MV3K7QJ-2WUZHXS-7DTW4AS"
                            ],
                            "oneOf": [
                              {
                                "type": "null"
                              },
                              {
                                "$exportedModuleInfo": {
                                  "path": ["clan", "syncthing", "id"]
                                },
                                "type": "string"
                              }
                            ]
                          },
                          "introducer": {
                            "$exportedModuleInfo": {
                              "path": ["clan", "syncthing", "introducer"]
                            },
                            "default": null,
                            "description": "The introducer for the machine.\n",
                            "oneOf": [
                              {
                                "type": "null"
                              },
                              {
                                "$exportedModuleInfo": {
                                  "path": ["clan", "syncthing", "introducer"]
                                },
                                "type": "string"
                              }
                            ]
                          }
                        },
                        "required": ["id"],
                        "type": "object",
                        "title": "syncthing-config-role-peer",
                        "default": {}
                      },
                      "extraModules": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "default": [],
                        "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "extraModules"
                            ]
                          },
                          "oneOf": [
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": "string"
                            },
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": [
                                "boolean",
                                "integer",
                                "number",
                                "string",
                                "array",
                                "object",
                                "null"
                              ]
                            }
                          ]
                        },
                        "type": "array"
                      },
                      "machines": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "machines"
                          ]
                        },
                        "default": [],
                        "description": "List of machines which are part of the role.\n\nThe machines are referenced by their `attributeName` in the `inventory.machines` attribute set.\n\nMemberships are declared here to determine which machines are part of the service.\n\nAlternatively, `tags` can be used to determine the membership, more dynamically.\n",
                        "examples": ["machineA"],
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "machines"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "tags": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "tags"
                          ]
                        },
                        "default": [],
                        "description": "List of tags which are used to determine the membership of the role.\n\nThe tags are matched against the `inventory.machines.<machineName>.tags` attribute set.\nIf a machine has at least one tag of the role, it is part of the role.\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "tags"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "user-password": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "config": {
                "title": "user-password-config",
                "oneOf": [
                  {
                    "$exportedModuleInfo": {
                      "path": []
                    },
                    "additionalProperties": false,
                    "properties": {
                      "prompt": {
                        "$exportedModuleInfo": {
                          "path": ["clan", "user-password", "prompt"]
                        },
                        "default": true,
                        "description": "Whether the user should be prompted.",
                        "examples": [false],
                        "type": "boolean"
                      },
                      "user": {
                        "$exportedModuleInfo": {
                          "path": ["clan", "user-password", "user"]
                        },
                        "description": "The user the password should be generated for.",
                        "examples": ["alice"],
                        "type": "string"
                      }
                    },
                    "required": ["user"],
                    "type": "object",
                    "title": "user-password-config-role-default"
                  }
                ],
                "type": "object",
                "default": {},
                "additionalProperties": false
              },
              "enabled": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "enabled"]
                },
                "default": true,
                "description": "Enable or disable the complete service.\n\nIf the service is disabled, it will not be added to any machine.\n\n!!! Note\n    This flag is primarily used to temporarily disable a service.\n    I.e. A 'backup service' without any 'server' might be incomplete and would cause failure if enabled.\n",
                "type": "boolean"
              },
              "extraModules": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "extraModules"]
                },
                "default": [],
                "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                "items": {
                  "$exportedModuleInfo": {
                    "path": ["services", "<name>", "extraModules"]
                  },
                  "oneOf": [
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": "string"
                    },
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": [
                        "boolean",
                        "integer",
                        "number",
                        "string",
                        "array",
                        "object",
                        "null"
                      ]
                    }
                  ]
                },
                "type": "array"
              },
              "machines": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "config": {
                      "title": "user-password-config",
                      "oneOf": [
                        {
                          "$exportedModuleInfo": {
                            "path": []
                          },
                          "additionalProperties": false,
                          "properties": {
                            "prompt": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "user-password", "prompt"]
                              },
                              "default": true,
                              "description": "Whether the user should be prompted.",
                              "examples": [false],
                              "type": "boolean"
                            },
                            "user": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "user-password", "user"]
                              },
                              "description": "The user the password should be generated for.",
                              "examples": ["alice"],
                              "type": "string"
                            }
                          },
                          "required": ["user"],
                          "type": "object",
                          "title": "user-password-config-role-default"
                        }
                      ],
                      "type": "object",
                      "default": {},
                      "additionalProperties": false
                    },
                    "extraModules": {
                      "$exportedModuleInfo": {
                        "path": [
                          "services",
                          "<name>",
                          "machines",
                          "<name>",
                          "extraModules"
                        ]
                      },
                      "default": [],
                      "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                      "items": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "machines",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "oneOf": [
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": "string"
                          },
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": [
                              "boolean",
                              "integer",
                              "number",
                              "string",
                              "array",
                              "object",
                              "null"
                            ]
                          }
                        ]
                      },
                      "type": "array"
                    }
                  }
                }
              },
              "meta": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "meta"]
                },
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "description"]
                    },
                    "default": null,
                    "description": "Optional freeform description\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "description"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "icon": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "icon"]
                    },
                    "default": null,
                    "description": "Under construction, will be used for the UI\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "icon"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "name": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "name"]
                    },
                    "default": "\u2039name\u203a",
                    "description": "Name of the machine or service\n",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "roles": {
                "title": "user-password-roles",
                "type": "object",
                "properties": {
                  "default": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "config": {
                        "$exportedModuleInfo": {
                          "path": []
                        },
                        "additionalProperties": false,
                        "properties": {
                          "prompt": {
                            "$exportedModuleInfo": {
                              "path": ["clan", "user-password", "prompt"]
                            },
                            "default": true,
                            "description": "Whether the user should be prompted.",
                            "examples": [false],
                            "type": "boolean"
                          },
                          "user": {
                            "$exportedModuleInfo": {
                              "path": ["clan", "user-password", "user"]
                            },
                            "description": "The user the password should be generated for.",
                            "examples": ["alice"],
                            "type": "string"
                          }
                        },
                        "required": ["user"],
                        "type": "object",
                        "title": "user-password-config-role-default",
                        "default": {}
                      },
                      "extraModules": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "default": [],
                        "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "extraModules"
                            ]
                          },
                          "oneOf": [
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": "string"
                            },
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": [
                                "boolean",
                                "integer",
                                "number",
                                "string",
                                "array",
                                "object",
                                "null"
                              ]
                            }
                          ]
                        },
                        "type": "array"
                      },
                      "machines": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "machines"
                          ]
                        },
                        "default": [],
                        "description": "List of machines which are part of the role.\n\nThe machines are referenced by their `attributeName` in the `inventory.machines` attribute set.\n\nMemberships are declared here to determine which machines are part of the service.\n\nAlternatively, `tags` can be used to determine the membership, more dynamically.\n",
                        "examples": ["machineA"],
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "machines"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "tags": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "tags"
                          ]
                        },
                        "default": [],
                        "description": "List of tags which are used to determine the membership of the role.\n\nThe tags are matched against the `inventory.machines.<machineName>.tags` attribute set.\nIf a machine has at least one tag of the role, it is part of the role.\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "tags"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "wifi": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "config": {
                "title": "wifi-config",
                "oneOf": [
                  {
                    "$exportedModuleInfo": {
                      "path": []
                    },
                    "additionalProperties": false,
                    "properties": {},
                    "type": "object",
                    "title": "wifi-config-role-default"
                  }
                ],
                "type": "object",
                "default": {},
                "additionalProperties": false
              },
              "enabled": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "enabled"]
                },
                "default": true,
                "description": "Enable or disable the complete service.\n\nIf the service is disabled, it will not be added to any machine.\n\n!!! Note\n    This flag is primarily used to temporarily disable a service.\n    I.e. A 'backup service' without any 'server' might be incomplete and would cause failure if enabled.\n",
                "type": "boolean"
              },
              "extraModules": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "extraModules"]
                },
                "default": [],
                "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                "items": {
                  "$exportedModuleInfo": {
                    "path": ["services", "<name>", "extraModules"]
                  },
                  "oneOf": [
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": "string"
                    },
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": [
                        "boolean",
                        "integer",
                        "number",
                        "string",
                        "array",
                        "object",
                        "null"
                      ]
                    }
                  ]
                },
                "type": "array"
              },
              "machines": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "config": {
                      "title": "wifi-config",
                      "oneOf": [
                        {
                          "$exportedModuleInfo": {
                            "path": []
                          },
                          "additionalProperties": false,
                          "properties": {},
                          "type": "object",
                          "title": "wifi-config-role-default"
                        }
                      ],
                      "type": "object",
                      "default": {},
                      "additionalProperties": false
                    },
                    "extraModules": {
                      "$exportedModuleInfo": {
                        "path": [
                          "services",
                          "<name>",
                          "machines",
                          "<name>",
                          "extraModules"
                        ]
                      },
                      "default": [],
                      "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                      "items": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "machines",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "oneOf": [
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": "string"
                          },
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": [
                              "boolean",
                              "integer",
                              "number",
                              "string",
                              "array",
                              "object",
                              "null"
                            ]
                          }
                        ]
                      },
                      "type": "array"
                    }
                  }
                }
              },
              "meta": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "meta"]
                },
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "description"]
                    },
                    "default": null,
                    "description": "Optional freeform description\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "description"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "icon": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "icon"]
                    },
                    "default": null,
                    "description": "Under construction, will be used for the UI\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "icon"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "name": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "name"]
                    },
                    "default": "\u2039name\u203a",
                    "description": "Name of the machine or service\n",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "roles": {
                "title": "wifi-roles",
                "type": "object",
                "properties": {
                  "default": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "config": {
                        "$exportedModuleInfo": {
                          "path": []
                        },
                        "additionalProperties": false,
                        "properties": {},
                        "type": "object",
                        "title": "wifi-config-role-default",
                        "default": {}
                      },
                      "extraModules": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "default": [],
                        "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "extraModules"
                            ]
                          },
                          "oneOf": [
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": "string"
                            },
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": [
                                "boolean",
                                "integer",
                                "number",
                                "string",
                                "array",
                                "object",
                                "null"
                              ]
                            }
                          ]
                        },
                        "type": "array"
                      },
                      "machines": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "machines"
                          ]
                        },
                        "default": [],
                        "description": "List of machines which are part of the role.\n\nThe machines are referenced by their `attributeName` in the `inventory.machines` attribute set.\n\nMemberships are declared here to determine which machines are part of the service.\n\nAlternatively, `tags` can be used to determine the membership, more dynamically.\n",
                        "examples": ["machineA"],
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "machines"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "tags": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "tags"
                          ]
                        },
                        "default": [],
                        "description": "List of tags which are used to determine the membership of the role.\n\nThe tags are matched against the `inventory.machines.<machineName>.tags` attribute set.\nIf a machine has at least one tag of the role, it is part of the role.\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "tags"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "zerotier": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "config": {
                "title": "zerotier-config",
                "oneOf": [
                  {
                    "$exportedModuleInfo": {
                      "path": []
                    },
                    "additionalProperties": false,
                    "properties": {
                      "excludeHosts": {
                        "$exportedModuleInfo": {
                          "defaultText": {
                            "_type": "literalExpression",
                            "text": "[ config.clan.core.settings.machine.name ]"
                          },
                          "path": ["clan", "zerotier", "excludeHosts"]
                        },
                        "description": "Hosts that should be excluded",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": ["clan", "zerotier", "excludeHosts"]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "networkIds": {
                        "$exportedModuleInfo": {
                          "path": ["clan", "zerotier", "networkIds"]
                        },
                        "default": [],
                        "description": "Extra zerotier network Ids that should be accepted",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": ["clan", "zerotier", "networkIds"]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "networkIps": {
                        "$exportedModuleInfo": {
                          "path": ["clan", "zerotier", "networkIps"]
                        },
                        "default": [],
                        "description": "Extra zerotier network Ips that should be accepted",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": ["clan", "zerotier", "networkIps"]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "required": ["excludeHosts"],
                    "type": "object",
                    "title": "zerotier-config-role-controller"
                  },
                  {
                    "$exportedModuleInfo": {
                      "path": []
                    },
                    "additionalProperties": false,
                    "properties": {
                      "excludeHosts": {
                        "$exportedModuleInfo": {
                          "defaultText": {
                            "_type": "literalExpression",
                            "text": "[ config.clan.core.settings.machine.name ]"
                          },
                          "path": ["clan", "zerotier", "excludeHosts"]
                        },
                        "description": "Hosts that should be excluded",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": ["clan", "zerotier", "excludeHosts"]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "moon": {
                        "$exportedModuleInfo": {
                          "path": ["moon"]
                        },
                        "additionalProperties": false,
                        "properties": {
                          "stableEndpoints": {
                            "$exportedModuleInfo": {
                              "path": [
                                "clan",
                                "zerotier",
                                "moon",
                                "stableEndpoints"
                              ]
                            },
                            "description": "Make this machine a moon.\nOther machines can join this moon by adding this moon in their config.\nIt will be reachable under the given stable endpoints.\n",
                            "examples": [
                              "[ 1.2.3.4\" \"10.0.0.3/9993\" \"2001:abcd:abcd::3/9993\" ]\n"
                            ],
                            "items": {
                              "$exportedModuleInfo": {
                                "path": [
                                  "clan",
                                  "zerotier",
                                  "moon",
                                  "stableEndpoints"
                                ]
                              },
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": ["stableEndpoints"],
                        "type": "object"
                      },
                      "networkIds": {
                        "$exportedModuleInfo": {
                          "path": ["clan", "zerotier", "networkIds"]
                        },
                        "default": [],
                        "description": "Extra zerotier network Ids that should be accepted",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": ["clan", "zerotier", "networkIds"]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "networkIps": {
                        "$exportedModuleInfo": {
                          "path": ["clan", "zerotier", "networkIps"]
                        },
                        "default": [],
                        "description": "Extra zerotier network Ips that should be accepted",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": ["clan", "zerotier", "networkIps"]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "required": ["excludeHosts", "moon"],
                    "type": "object",
                    "title": "zerotier-config-role-moon"
                  },
                  {
                    "$exportedModuleInfo": {
                      "path": []
                    },
                    "additionalProperties": false,
                    "properties": {
                      "excludeHosts": {
                        "$exportedModuleInfo": {
                          "defaultText": {
                            "_type": "literalExpression",
                            "text": "[ config.clan.core.settings.machine.name ]"
                          },
                          "path": ["clan", "zerotier", "excludeHosts"]
                        },
                        "description": "Hosts that should be excluded",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": ["clan", "zerotier", "excludeHosts"]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "networkIds": {
                        "$exportedModuleInfo": {
                          "path": ["clan", "zerotier", "networkIds"]
                        },
                        "default": [],
                        "description": "Extra zerotier network Ids that should be accepted",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": ["clan", "zerotier", "networkIds"]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "networkIps": {
                        "$exportedModuleInfo": {
                          "path": ["clan", "zerotier", "networkIps"]
                        },
                        "default": [],
                        "description": "Extra zerotier network Ips that should be accepted",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": ["clan", "zerotier", "networkIps"]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "required": ["excludeHosts"],
                    "type": "object",
                    "title": "zerotier-config-role-peer"
                  }
                ],
                "type": "object",
                "default": {},
                "additionalProperties": false
              },
              "enabled": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "enabled"]
                },
                "default": true,
                "description": "Enable or disable the complete service.\n\nIf the service is disabled, it will not be added to any machine.\n\n!!! Note\n    This flag is primarily used to temporarily disable a service.\n    I.e. A 'backup service' without any 'server' might be incomplete and would cause failure if enabled.\n",
                "type": "boolean"
              },
              "extraModules": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "extraModules"]
                },
                "default": [],
                "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                "items": {
                  "$exportedModuleInfo": {
                    "path": ["services", "<name>", "extraModules"]
                  },
                  "oneOf": [
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": "string"
                    },
                    {
                      "$exportedModuleInfo": {
                        "path": ["services", "<name>", "extraModules"]
                      },
                      "type": [
                        "boolean",
                        "integer",
                        "number",
                        "string",
                        "array",
                        "object",
                        "null"
                      ]
                    }
                  ]
                },
                "type": "array"
              },
              "machines": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "config": {
                      "title": "zerotier-config",
                      "oneOf": [
                        {
                          "$exportedModuleInfo": {
                            "path": []
                          },
                          "additionalProperties": false,
                          "properties": {
                            "excludeHosts": {
                              "$exportedModuleInfo": {
                                "defaultText": {
                                  "_type": "literalExpression",
                                  "text": "[ config.clan.core.settings.machine.name ]"
                                },
                                "path": ["clan", "zerotier", "excludeHosts"]
                              },
                              "description": "Hosts that should be excluded",
                              "items": {
                                "$exportedModuleInfo": {
                                  "path": ["clan", "zerotier", "excludeHosts"]
                                },
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "networkIds": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "zerotier", "networkIds"]
                              },
                              "default": [],
                              "description": "Extra zerotier network Ids that should be accepted",
                              "items": {
                                "$exportedModuleInfo": {
                                  "path": ["clan", "zerotier", "networkIds"]
                                },
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "networkIps": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "zerotier", "networkIps"]
                              },
                              "default": [],
                              "description": "Extra zerotier network Ips that should be accepted",
                              "items": {
                                "$exportedModuleInfo": {
                                  "path": ["clan", "zerotier", "networkIps"]
                                },
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "required": ["excludeHosts"],
                          "type": "object",
                          "title": "zerotier-config-role-controller"
                        },
                        {
                          "$exportedModuleInfo": {
                            "path": []
                          },
                          "additionalProperties": false,
                          "properties": {
                            "excludeHosts": {
                              "$exportedModuleInfo": {
                                "defaultText": {
                                  "_type": "literalExpression",
                                  "text": "[ config.clan.core.settings.machine.name ]"
                                },
                                "path": ["clan", "zerotier", "excludeHosts"]
                              },
                              "description": "Hosts that should be excluded",
                              "items": {
                                "$exportedModuleInfo": {
                                  "path": ["clan", "zerotier", "excludeHosts"]
                                },
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "moon": {
                              "$exportedModuleInfo": {
                                "path": ["moon"]
                              },
                              "additionalProperties": false,
                              "properties": {
                                "stableEndpoints": {
                                  "$exportedModuleInfo": {
                                    "path": [
                                      "clan",
                                      "zerotier",
                                      "moon",
                                      "stableEndpoints"
                                    ]
                                  },
                                  "description": "Make this machine a moon.\nOther machines can join this moon by adding this moon in their config.\nIt will be reachable under the given stable endpoints.\n",
                                  "examples": [
                                    "[ 1.2.3.4\" \"10.0.0.3/9993\" \"2001:abcd:abcd::3/9993\" ]\n"
                                  ],
                                  "items": {
                                    "$exportedModuleInfo": {
                                      "path": [
                                        "clan",
                                        "zerotier",
                                        "moon",
                                        "stableEndpoints"
                                      ]
                                    },
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "required": ["stableEndpoints"],
                              "type": "object"
                            },
                            "networkIds": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "zerotier", "networkIds"]
                              },
                              "default": [],
                              "description": "Extra zerotier network Ids that should be accepted",
                              "items": {
                                "$exportedModuleInfo": {
                                  "path": ["clan", "zerotier", "networkIds"]
                                },
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "networkIps": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "zerotier", "networkIps"]
                              },
                              "default": [],
                              "description": "Extra zerotier network Ips that should be accepted",
                              "items": {
                                "$exportedModuleInfo": {
                                  "path": ["clan", "zerotier", "networkIps"]
                                },
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "required": ["excludeHosts", "moon"],
                          "type": "object",
                          "title": "zerotier-config-role-moon"
                        },
                        {
                          "$exportedModuleInfo": {
                            "path": []
                          },
                          "additionalProperties": false,
                          "properties": {
                            "excludeHosts": {
                              "$exportedModuleInfo": {
                                "defaultText": {
                                  "_type": "literalExpression",
                                  "text": "[ config.clan.core.settings.machine.name ]"
                                },
                                "path": ["clan", "zerotier", "excludeHosts"]
                              },
                              "description": "Hosts that should be excluded",
                              "items": {
                                "$exportedModuleInfo": {
                                  "path": ["clan", "zerotier", "excludeHosts"]
                                },
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "networkIds": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "zerotier", "networkIds"]
                              },
                              "default": [],
                              "description": "Extra zerotier network Ids that should be accepted",
                              "items": {
                                "$exportedModuleInfo": {
                                  "path": ["clan", "zerotier", "networkIds"]
                                },
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "networkIps": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "zerotier", "networkIps"]
                              },
                              "default": [],
                              "description": "Extra zerotier network Ips that should be accepted",
                              "items": {
                                "$exportedModuleInfo": {
                                  "path": ["clan", "zerotier", "networkIps"]
                                },
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "required": ["excludeHosts"],
                          "type": "object",
                          "title": "zerotier-config-role-peer"
                        }
                      ],
                      "type": "object",
                      "default": {},
                      "additionalProperties": false
                    },
                    "extraModules": {
                      "$exportedModuleInfo": {
                        "path": [
                          "services",
                          "<name>",
                          "machines",
                          "<name>",
                          "extraModules"
                        ]
                      },
                      "default": [],
                      "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                      "items": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "machines",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "oneOf": [
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": "string"
                          },
                          {
                            "$exportedModuleInfo": {
                              "path": [
                                "services",
                                "<name>",
                                "machines",
                                "<name>",
                                "extraModules"
                              ]
                            },
                            "type": [
                              "boolean",
                              "integer",
                              "number",
                              "string",
                              "array",
                              "object",
                              "null"
                            ]
                          }
                        ]
                      },
                      "type": "array"
                    }
                  }
                }
              },
              "meta": {
                "$exportedModuleInfo": {
                  "path": ["services", "<name>", "meta"]
                },
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "description"]
                    },
                    "default": null,
                    "description": "Optional freeform description\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "description"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "icon": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "icon"]
                    },
                    "default": null,
                    "description": "Under construction, will be used for the UI\n",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "$exportedModuleInfo": {
                          "path": ["services", "<name>", "meta", "icon"]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "name": {
                    "$exportedModuleInfo": {
                      "path": ["services", "<name>", "meta", "name"]
                    },
                    "default": "\u2039name\u203a",
                    "description": "Name of the machine or service\n",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "roles": {
                "title": "zerotier-roles",
                "type": "object",
                "properties": {
                  "controller": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "config": {
                        "$exportedModuleInfo": {
                          "path": []
                        },
                        "additionalProperties": false,
                        "properties": {
                          "excludeHosts": {
                            "$exportedModuleInfo": {
                              "defaultText": {
                                "_type": "literalExpression",
                                "text": "[ config.clan.core.settings.machine.name ]"
                              },
                              "path": ["clan", "zerotier", "excludeHosts"]
                            },
                            "description": "Hosts that should be excluded",
                            "items": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "zerotier", "excludeHosts"]
                              },
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "networkIds": {
                            "$exportedModuleInfo": {
                              "path": ["clan", "zerotier", "networkIds"]
                            },
                            "default": [],
                            "description": "Extra zerotier network Ids that should be accepted",
                            "items": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "zerotier", "networkIds"]
                              },
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "networkIps": {
                            "$exportedModuleInfo": {
                              "path": ["clan", "zerotier", "networkIps"]
                            },
                            "default": [],
                            "description": "Extra zerotier network Ips that should be accepted",
                            "items": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "zerotier", "networkIps"]
                              },
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": ["excludeHosts"],
                        "type": "object",
                        "title": "zerotier-config-role-controller",
                        "default": {}
                      },
                      "extraModules": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "default": [],
                        "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "extraModules"
                            ]
                          },
                          "oneOf": [
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": "string"
                            },
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": [
                                "boolean",
                                "integer",
                                "number",
                                "string",
                                "array",
                                "object",
                                "null"
                              ]
                            }
                          ]
                        },
                        "type": "array"
                      },
                      "machines": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "machines"
                          ]
                        },
                        "default": [],
                        "description": "List of machines which are part of the role.\n\nThe machines are referenced by their `attributeName` in the `inventory.machines` attribute set.\n\nMemberships are declared here to determine which machines are part of the service.\n\nAlternatively, `tags` can be used to determine the membership, more dynamically.\n",
                        "examples": ["machineA"],
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "machines"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "tags": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "tags"
                          ]
                        },
                        "default": [],
                        "description": "List of tags which are used to determine the membership of the role.\n\nThe tags are matched against the `inventory.machines.<machineName>.tags` attribute set.\nIf a machine has at least one tag of the role, it is part of the role.\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "tags"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      }
                    }
                  },
                  "moon": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "config": {
                        "$exportedModuleInfo": {
                          "path": []
                        },
                        "additionalProperties": false,
                        "properties": {
                          "excludeHosts": {
                            "$exportedModuleInfo": {
                              "defaultText": {
                                "_type": "literalExpression",
                                "text": "[ config.clan.core.settings.machine.name ]"
                              },
                              "path": ["clan", "zerotier", "excludeHosts"]
                            },
                            "description": "Hosts that should be excluded",
                            "items": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "zerotier", "excludeHosts"]
                              },
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "moon": {
                            "$exportedModuleInfo": {
                              "path": ["moon"]
                            },
                            "additionalProperties": false,
                            "properties": {
                              "stableEndpoints": {
                                "$exportedModuleInfo": {
                                  "path": [
                                    "clan",
                                    "zerotier",
                                    "moon",
                                    "stableEndpoints"
                                  ]
                                },
                                "description": "Make this machine a moon.\nOther machines can join this moon by adding this moon in their config.\nIt will be reachable under the given stable endpoints.\n",
                                "examples": [
                                  "[ 1.2.3.4\" \"10.0.0.3/9993\" \"2001:abcd:abcd::3/9993\" ]\n"
                                ],
                                "items": {
                                  "$exportedModuleInfo": {
                                    "path": [
                                      "clan",
                                      "zerotier",
                                      "moon",
                                      "stableEndpoints"
                                    ]
                                  },
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            },
                            "required": ["stableEndpoints"],
                            "type": "object"
                          },
                          "networkIds": {
                            "$exportedModuleInfo": {
                              "path": ["clan", "zerotier", "networkIds"]
                            },
                            "default": [],
                            "description": "Extra zerotier network Ids that should be accepted",
                            "items": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "zerotier", "networkIds"]
                              },
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "networkIps": {
                            "$exportedModuleInfo": {
                              "path": ["clan", "zerotier", "networkIps"]
                            },
                            "default": [],
                            "description": "Extra zerotier network Ips that should be accepted",
                            "items": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "zerotier", "networkIps"]
                              },
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": ["excludeHosts", "moon"],
                        "type": "object",
                        "title": "zerotier-config-role-moon",
                        "default": {}
                      },
                      "extraModules": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "default": [],
                        "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "extraModules"
                            ]
                          },
                          "oneOf": [
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": "string"
                            },
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": [
                                "boolean",
                                "integer",
                                "number",
                                "string",
                                "array",
                                "object",
                                "null"
                              ]
                            }
                          ]
                        },
                        "type": "array"
                      },
                      "machines": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "machines"
                          ]
                        },
                        "default": [],
                        "description": "List of machines which are part of the role.\n\nThe machines are referenced by their `attributeName` in the `inventory.machines` attribute set.\n\nMemberships are declared here to determine which machines are part of the service.\n\nAlternatively, `tags` can be used to determine the membership, more dynamically.\n",
                        "examples": ["machineA"],
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "machines"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "tags": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "tags"
                          ]
                        },
                        "default": [],
                        "description": "List of tags which are used to determine the membership of the role.\n\nThe tags are matched against the `inventory.machines.<machineName>.tags` attribute set.\nIf a machine has at least one tag of the role, it is part of the role.\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "tags"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      }
                    }
                  },
                  "peer": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "config": {
                        "$exportedModuleInfo": {
                          "path": []
                        },
                        "additionalProperties": false,
                        "properties": {
                          "excludeHosts": {
                            "$exportedModuleInfo": {
                              "defaultText": {
                                "_type": "literalExpression",
                                "text": "[ config.clan.core.settings.machine.name ]"
                              },
                              "path": ["clan", "zerotier", "excludeHosts"]
                            },
                            "description": "Hosts that should be excluded",
                            "items": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "zerotier", "excludeHosts"]
                              },
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "networkIds": {
                            "$exportedModuleInfo": {
                              "path": ["clan", "zerotier", "networkIds"]
                            },
                            "default": [],
                            "description": "Extra zerotier network Ids that should be accepted",
                            "items": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "zerotier", "networkIds"]
                              },
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "networkIps": {
                            "$exportedModuleInfo": {
                              "path": ["clan", "zerotier", "networkIps"]
                            },
                            "default": [],
                            "description": "Extra zerotier network Ips that should be accepted",
                            "items": {
                              "$exportedModuleInfo": {
                                "path": ["clan", "zerotier", "networkIps"]
                              },
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": ["excludeHosts"],
                        "type": "object",
                        "title": "zerotier-config-role-peer",
                        "default": {}
                      },
                      "extraModules": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "extraModules"
                          ]
                        },
                        "default": [],
                        "description": "List of additionally imported `.nix` expressions.\n\nSupported types:\n\n- **Strings**: Interpreted relative to the 'directory' passed to buildClan.\n- **Paths**: should be relative to the current file.\n- **Any**: Nix expression must be serializable to JSON.\n\n!!! Note\n    **The import only happens if the machine is part of the service or role.**\n\nOther types are passed through to the nixos configuration.\n\n???+ Example\n    To import the `special.nix` file\n\n    ```\n    . Clan Directory\n    \u251c\u2500\u2500 flake.nix\n    ...\n    \u2514\u2500\u2500 modules\n        \u251c\u2500\u2500 special.nix\n        \u2514\u2500\u2500 ...\n    ```\n\n    ```nix\n    {\n      extraModules = [ \"modules/special.nix\" ];\n    }\n    ```\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "extraModules"
                            ]
                          },
                          "oneOf": [
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": "string"
                            },
                            {
                              "$exportedModuleInfo": {
                                "path": [
                                  "services",
                                  "<name>",
                                  "roles",
                                  "<name>",
                                  "extraModules"
                                ]
                              },
                              "type": [
                                "boolean",
                                "integer",
                                "number",
                                "string",
                                "array",
                                "object",
                                "null"
                              ]
                            }
                          ]
                        },
                        "type": "array"
                      },
                      "machines": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "machines"
                          ]
                        },
                        "default": [],
                        "description": "List of machines which are part of the role.\n\nThe machines are referenced by their `attributeName` in the `inventory.machines` attribute set.\n\nMemberships are declared here to determine which machines are part of the service.\n\nAlternatively, `tags` can be used to determine the membership, more dynamically.\n",
                        "examples": ["machineA"],
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "machines"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "tags": {
                        "$exportedModuleInfo": {
                          "path": [
                            "services",
                            "<name>",
                            "roles",
                            "<name>",
                            "tags"
                          ]
                        },
                        "default": [],
                        "description": "List of tags which are used to determine the membership of the role.\n\nThe tags are matched against the `inventory.machines.<machineName>.tags` attribute set.\nIf a machine has at least one tag of the role, it is part of the role.\n",
                        "items": {
                          "$exportedModuleInfo": {
                            "path": [
                              "services",
                              "<name>",
                              "roles",
                              "<name>",
                              "tags"
                            ]
                          },
                          "type": "string"
                        },
                        "type": "array"
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    "tags": {
      "$exportedModuleInfo": {
        "path": ["tags"]
      },
      "additionalProperties": {
        "$exportedModuleInfo": {
          "path": ["tags"]
        },
        "items": {
          "$exportedModuleInfo": {
            "path": ["tags"]
          },
          "type": "string"
        },
        "type": "array"
      },
      "default": {},
      "description": "Tags of the inventory are used to group machines together.\n\nIt is recommended to use [`machine.tags`](#inventory.machines.tags) to define the tags of the machines.\n\nThis can be used to define custom tags that are either statically set or dynamically computed.\n\n#### Static Tags\n\n???+ example \"Static Tag Example\"\n    ```nix\n    inventory.tags = {\n      foo = [ \"machineA\" \"machineB\" ];\n    };\n    ```\n\n    The tag `foo` will always be added to `machineA` and `machineB`.\n\n#### Dynamic Tags\n\nIt is possible to compute tags based on the machines properties or based on other tags.\n\n!!! danger\n    This is a powerful feature and should be used with caution.\n\n    It is possible to cause infinite recursion by computing tags based on the machines properties or based on other tags.\n\n???+ example \"Dynamic Tag Example\"\n\n    allButFoo is a computed tag. It will be added to all machines except 'foo'\n\n    `all` is a predefined tag. See the docs of [`tags.all`](#inventory.tags.all).\n\n    ```nix\n    #  inventory.tags \u2193       \u2193 inventory.machines\n    inventory.tags = {config, machines...}: {\n      #                                                        \u2193\u2193\u2193 The \"all\" tag\n      allButFoo = builtins.filter (name: name != \"foo\") config.all;\n    };\n    ```\n\n!!! warning\n    Do NOT compute `tags` from `machine.tags` this will cause infinite recursion.\n",
      "properties": {
        "all": {
          "$exportedModuleInfo": {
            "defaultText": "[ <All Machines> ]",
            "path": ["tags", "all"]
          },
          "description": "!!! example \"Predefined Tag\"\n\n    Will be added to all machines\n\n    ```nix\n    inventory.machines.machineA.tags = [ \"all\" ];\n    ```\n",
          "items": {
            "$exportedModuleInfo": {
              "path": ["tags", "all"]
            },
            "type": "string"
          },
          "type": "array"
        },
        "darwin": {
          "$exportedModuleInfo": {
            "defaultText": "[ <All Darwin Machines> ]",
            "path": ["tags", "darwin"]
          },
          "description": "!!! example \"Predefined Tag\"\n\n    Will be added to all machines that set `machineClass = \"darwin\"`\n\n    ```nix\n    inventory.machines.machineA.tags = [ \"darwin\" ];\n    ```\n",
          "items": {
            "$exportedModuleInfo": {
              "path": ["tags", "darwin"]
            },
            "type": "string"
          },
          "type": "array"
        },
        "nixos": {
          "$exportedModuleInfo": {
            "defaultText": "[ <All NixOS Machines> ]",
            "path": ["tags", "nixos"]
          },
          "description": "!!! example \"Predefined Tag\"\n\n    Will be added to all machines that set `machineClass = \"nixos\"`\n\n    ```nix\n    inventory.machines.machineA.tags = [ \"nixos\" ];\n    ```\n",
          "items": {
            "$exportedModuleInfo": {
              "path": ["tags", "nixos"]
            },
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": ["all", "darwin", "nixos"],
      "type": "object"
    }
  },
  "required": ["meta", "modules"],
  "type": "object"
}
