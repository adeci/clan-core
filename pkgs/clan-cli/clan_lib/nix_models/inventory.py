# DO NOT EDIT THIS FILE MANUALLY. IT IS GENERATED.
# This file was generated by running `pkgs/clan-cli/clan_lib.inventory/update.sh`
#
# ruff: noqa: N815
# ruff: noqa: N806
# ruff: noqa: F401
# fmt: off
from typing import Any, Literal, NotRequired, TypedDict


# Mimic "unknown".
# 'Any' is unsafe because it allows any operations
# This forces the user to use type-narrowing or casting in the code
class Unknown:
    pass


InstanceModuleNameType = str
InstanceModuleInputType = str

class InstanceModule(TypedDict):
    name: str
    input: NotRequired[InstanceModuleInputType]



InstanceRoleMachineSettingsType = Unknown

class InstanceRoleMachine(TypedDict):
    settings: NotRequired[InstanceRoleMachineSettingsType]





class InstanceRoleTag(TypedDict):
    pass



InstanceRoleMachinesType = dict[str, InstanceRoleMachine]
InstanceRoleSettingsType = Unknown
InstanceRoleTagsType = dict[str, InstanceRoleTag]

class InstanceRole(TypedDict):
    machines: NotRequired[InstanceRoleMachinesType]
    settings: NotRequired[InstanceRoleSettingsType]
    tags: NotRequired[InstanceRoleTagsType]



InstanceModuleType = InstanceModule
InstanceRolesType = dict[str, InstanceRole]

class Instance(TypedDict):
    module: NotRequired[InstanceModuleType]
    roles: NotRequired[InstanceRolesType]



MachineDeployBuildhostType = str
MachineDeployTargethostType = str

class MachineDeploy(TypedDict):
    buildHost: NotRequired[MachineDeployBuildhostType]
    targetHost: NotRequired[MachineDeployTargethostType]



MachineDeployType = MachineDeploy
MachineDescriptionType = str
MachineIconType = str
MachineMachineclassType = Literal["nixos", "darwin"]
MachineNameType = str
MachineTagsType = list[str]

class Machine(TypedDict):
    deploy: NotRequired[MachineDeployType]
    description: NotRequired[MachineDescriptionType]
    icon: NotRequired[MachineIconType]
    machineClass: NotRequired[MachineMachineclassType]
    name: NotRequired[MachineNameType]
    tags: NotRequired[MachineTagsType]



MetaNameType = str
MetaDescriptionType = str
MetaIconType = str

class Meta(TypedDict):
    name: str
    description: NotRequired[MetaDescriptionType]
    icon: NotRequired[MetaIconType]

Service = dict[str, Any]



InventoryInstancesType = dict[str, Instance]
InventoryMachinesType = dict[str, Machine]
InventoryMetaType = Meta
InventoryModulesType = dict[str, Any]
InventoryServicesType = dict[str, Service]
InventoryTagsType = dict[str, Any]

class Inventory(TypedDict):
    instances: NotRequired[InventoryInstancesType]
    machines: NotRequired[InventoryMachinesType]
    meta: NotRequired[InventoryMetaType]
    modules: NotRequired[InventoryModulesType]
    services: NotRequired[InventoryServicesType]
    tags: NotRequired[InventoryTagsType]
